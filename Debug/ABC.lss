
ABC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f82  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000064  00800060  00000f82  00000ff6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000105a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000108c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000010c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000135a  00000000  00000000  00001150  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000787  00000000  00000000  000024aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007e1  00000000  00000000  00002c31  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000013c  00000000  00000000  00003414  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000038d  00000000  00000000  00003550  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b0d  00000000  00000000  000038dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  000043ea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	8f c0       	rjmp	.+286    	; 0x120 <__ctors_end>
   2:	a1 c0       	rjmp	.+322    	; 0x146 <__bad_interrupt>
   4:	a0 c0       	rjmp	.+320    	; 0x146 <__bad_interrupt>
   6:	9f c0       	rjmp	.+318    	; 0x146 <__bad_interrupt>
   8:	9e c0       	rjmp	.+316    	; 0x146 <__bad_interrupt>
   a:	9d c0       	rjmp	.+314    	; 0x146 <__bad_interrupt>
   c:	9c c0       	rjmp	.+312    	; 0x146 <__bad_interrupt>
   e:	9b c0       	rjmp	.+310    	; 0x146 <__bad_interrupt>
  10:	9a c0       	rjmp	.+308    	; 0x146 <__bad_interrupt>
  12:	99 c0       	rjmp	.+306    	; 0x146 <__bad_interrupt>
  14:	98 c0       	rjmp	.+304    	; 0x146 <__bad_interrupt>
  16:	97 c0       	rjmp	.+302    	; 0x146 <__bad_interrupt>
  18:	96 c0       	rjmp	.+300    	; 0x146 <__bad_interrupt>
  1a:	95 c0       	rjmp	.+298    	; 0x146 <__bad_interrupt>
  1c:	94 c0       	rjmp	.+296    	; 0x146 <__bad_interrupt>
  1e:	93 c0       	rjmp	.+294    	; 0x146 <__bad_interrupt>
  20:	92 c0       	rjmp	.+292    	; 0x146 <__bad_interrupt>
  22:	91 c0       	rjmp	.+290    	; 0x146 <__bad_interrupt>
  24:	90 c0       	rjmp	.+288    	; 0x146 <__bad_interrupt>

00000026 <__trampolines_end>:
  26:	00 40       	sbci	r16, 0x00	; 0
  28:	7a 10       	cpse	r7, r10
  2a:	f3 5a       	subi	r31, 0xA3	; 163
  2c:	00 a0       	ldd	r0, Z+32	; 0x20
  2e:	72 4e       	sbci	r23, 0xE2	; 226
  30:	18 09       	sbc	r17, r8
  32:	00 10       	cpse	r0, r0
  34:	a5 d4       	rcall	.+2378   	; 0x980 <__fp_splitA+0x1c>
  36:	e8 00       	.word	0x00e8	; ????
  38:	00 e8       	ldi	r16, 0x80	; 128
  3a:	76 48       	sbci	r23, 0x86	; 134
  3c:	17 00       	.word	0x0017	; ????
  3e:	00 e4       	ldi	r16, 0x40	; 64
  40:	0b 54       	subi	r16, 0x4B	; 75
  42:	02 00       	.word	0x0002	; ????
  44:	00 ca       	rjmp	.-3072   	; 0xfffff446 <__eeprom_end+0xff7ef446>
  46:	9a 3b       	cpi	r25, 0xBA	; 186
  48:	00 00       	nop
  4a:	00 e1       	ldi	r16, 0x10	; 16
  4c:	f5 05       	cpc	r31, r5
  4e:	00 00       	nop
  50:	80 96       	adiw	r24, 0x20	; 32
  52:	98 00       	.word	0x0098	; ????
  54:	00 00       	nop
  56:	40 42       	sbci	r20, 0x20	; 32
  58:	0f 00       	.word	0x000f	; ????
  5a:	00 00       	nop
  5c:	a0 86       	std	Z+8, r10	; 0x08
  5e:	01 00       	.word	0x0001	; ????
  60:	00 00       	nop
  62:	10 27       	eor	r17, r16
  64:	00 00       	nop
  66:	00 00       	nop
  68:	e8 03       	fmulsu	r22, r16
  6a:	00 00       	nop
  6c:	00 00       	nop
  6e:	64 00       	.word	0x0064	; ????
  70:	00 00       	nop
  72:	00 00       	nop
  74:	0a 00       	.word	0x000a	; ????
  76:	00 00       	nop
  78:	00 00       	nop
  7a:	01 00       	.word	0x0001	; ????
  7c:	00 00       	nop
  7e:	00 00       	nop
  80:	2c 76       	andi	r18, 0x6C	; 108
  82:	d8 88       	ldd	r13, Y+16	; 0x10
  84:	dc 67       	ori	r29, 0x7C	; 124
  86:	4f 08       	sbc	r4, r15
  88:	23 df       	rcall	.-442    	; 0xfffffed0 <__eeprom_end+0xff7efed0>
  8a:	c1 df       	rcall	.-126    	; 0xe <__FUSE_REGION_LENGTH__+0xc>
  8c:	ae 59       	subi	r26, 0x9E	; 158
  8e:	e1 b1       	in	r30, 0x01	; 1
  90:	b7 96       	adiw	r30, 0x27	; 39
  92:	e5 e3       	ldi	r30, 0x35	; 53
  94:	e4 53       	subi	r30, 0x34	; 52
  96:	c6 3a       	cpi	r28, 0xA6	; 166
  98:	e6 51       	subi	r30, 0x16	; 22
  9a:	99 76       	andi	r25, 0x69	; 105
  9c:	96 e8       	ldi	r25, 0x86	; 134
  9e:	e6 c2       	rjmp	.+1484   	; 0x66c <__stack+0x20d>
  a0:	84 26       	eor	r8, r20
  a2:	eb 89       	ldd	r30, Y+19	; 0x13
  a4:	8c 9b       	sbis	0x11, 4	; 17
  a6:	62 ed       	ldi	r22, 0xD2	; 210
  a8:	40 7c       	andi	r20, 0xC0	; 192
  aa:	6f fc       	.word	0xfc6f	; ????
  ac:	ef bc       	out	0x2f, r14	; 47
  ae:	9c 9f       	mul	r25, r28
  b0:	40 f2       	brcs	.-112    	; 0x42 <__SREG__+0x3>
  b2:	ba a5       	ldd	r27, Y+42	; 0x2a
  b4:	6f a5       	ldd	r22, Y+47	; 0x2f
  b6:	f4 90       	lpm	r15, Z
  b8:	05 5a       	subi	r16, 0xA5	; 165
  ba:	2a f7       	brpl	.-54     	; 0x86 <__SREG__+0x47>
  bc:	5c 93       	st	X, r21
  be:	6b 6c       	ori	r22, 0xCB	; 203
  c0:	f9 67       	ori	r31, 0x79	; 121
  c2:	6d c1       	rjmp	.+730    	; 0x39e <Read_T+0x50>
  c4:	1b fc       	.word	0xfc1b	; ????
  c6:	e0 e4       	ldi	r30, 0x40	; 64
  c8:	0d 47       	sbci	r16, 0x7D	; 125
  ca:	fe f5       	brtc	.+126    	; 0x14a <LCD_Command+0x2>
  cc:	20 e6       	ldi	r18, 0x60	; 96
  ce:	b5 00       	.word	0x00b5	; ????
  d0:	d0 ed       	ldi	r29, 0xD0	; 208
  d2:	90 2e       	mov	r9, r16
  d4:	03 00       	.word	0x0003	; ????
  d6:	94 35       	cpi	r25, 0x54	; 84
  d8:	77 05       	cpc	r23, r7
  da:	00 80       	ld	r0, Z
  dc:	84 1e       	adc	r8, r20
  de:	08 00       	.word	0x0008	; ????
  e0:	00 20       	and	r0, r0
  e2:	4e 0a       	sbc	r4, r30
  e4:	00 00       	nop
  e6:	00 c8       	rjmp	.-4096   	; 0xfffff0e8 <__eeprom_end+0xff7ef0e8>
  e8:	0c 33       	cpi	r16, 0x3C	; 60
  ea:	33 33       	cpi	r19, 0x33	; 51
  ec:	33 0f       	add	r19, r19
  ee:	98 6e       	ori	r25, 0xE8	; 232
  f0:	12 83       	std	Z+2, r17	; 0x02
  f2:	11 41       	sbci	r17, 0x11	; 17
  f4:	ef 8d       	ldd	r30, Y+31	; 0x1f
  f6:	21 14       	cp	r2, r1
  f8:	89 3b       	cpi	r24, 0xB9	; 185
  fa:	e6 55       	subi	r30, 0x56	; 86
  fc:	16 cf       	rjmp	.-468    	; 0xffffff2a <__eeprom_end+0xff7eff2a>
  fe:	fe e6       	ldi	r31, 0x6E	; 110
 100:	db 18       	sub	r13, r11
 102:	d1 84       	ldd	r13, Z+9	; 0x09
 104:	4b 38       	cpi	r20, 0x8B	; 139
 106:	1b f7       	brvc	.-58     	; 0xce <__SREG__+0x8f>
 108:	7c 1d       	adc	r23, r12
 10a:	90 1d       	adc	r25, r0
 10c:	a4 bb       	out	0x14, r26	; 20
 10e:	e4 24       	eor	r14, r4
 110:	20 32       	cpi	r18, 0x20	; 32
 112:	84 72       	andi	r24, 0x24	; 36
 114:	5e 22       	and	r5, r30
 116:	81 00       	.word	0x0081	; ????
 118:	c9 f1       	breq	.+114    	; 0x18c <LCD_Command+0x44>
 11a:	24 ec       	ldi	r18, 0xC4	; 196
 11c:	a1 e5       	ldi	r26, 0x51	; 81
 11e:	3d 27       	eor	r19, r29

00000120 <__ctors_end>:
 120:	11 24       	eor	r1, r1
 122:	1f be       	out	0x3f, r1	; 63
 124:	cf e5       	ldi	r28, 0x5F	; 95
 126:	d4 e0       	ldi	r29, 0x04	; 4
 128:	de bf       	out	0x3e, r29	; 62
 12a:	cd bf       	out	0x3d, r28	; 61

0000012c <__do_copy_data>:
 12c:	10 e0       	ldi	r17, 0x00	; 0
 12e:	a0 e6       	ldi	r26, 0x60	; 96
 130:	b0 e0       	ldi	r27, 0x00	; 0
 132:	e2 e8       	ldi	r30, 0x82	; 130
 134:	ff e0       	ldi	r31, 0x0F	; 15
 136:	02 c0       	rjmp	.+4      	; 0x13c <__do_copy_data+0x10>
 138:	05 90       	lpm	r0, Z+
 13a:	0d 92       	st	X+, r0
 13c:	a4 3c       	cpi	r26, 0xC4	; 196
 13e:	b1 07       	cpc	r27, r17
 140:	d9 f7       	brne	.-10     	; 0x138 <__do_copy_data+0xc>
 142:	35 d1       	rcall	.+618    	; 0x3ae <main>
 144:	1c c7       	rjmp	.+3640   	; 0xf7e <_exit>

00000146 <__bad_interrupt>:
 146:	5c cf       	rjmp	.-328    	; 0x0 <__vectors>

00000148 <LCD_Command>:
#include "LCD.h"		

void LCD_Command (char cmd){
	LCD_Data_Port = (LCD_Data_Port & 0x0F) | (cmd & 0xF0); 
 148:	98 b3       	in	r25, 0x18	; 24
 14a:	9f 70       	andi	r25, 0x0F	; 15
 14c:	28 2f       	mov	r18, r24
 14e:	20 7f       	andi	r18, 0xF0	; 240
 150:	92 2b       	or	r25, r18
 152:	98 bb       	out	0x18, r25	; 24
	LCD_Data_Port &= ~ (1<<RS);		
 154:	c2 98       	cbi	0x18, 2	; 24
	LCD_Data_Port |= (1<<EN);		
 156:	c0 9a       	sbi	0x18, 0	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 158:	32 e0       	ldi	r19, 0x02	; 2
 15a:	3a 95       	dec	r19
 15c:	f1 f7       	brne	.-4      	; 0x15a <LCD_Command+0x12>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <LCD_Command+0x18>
	_delay_us(1);
	LCD_Data_Port &= ~ (1<<EN);
 160:	c0 98       	cbi	0x18, 0	; 24
 162:	ef e8       	ldi	r30, 0x8F	; 143
 164:	f1 e0       	ldi	r31, 0x01	; 1
 166:	31 97       	sbiw	r30, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <LCD_Command+0x1e>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <LCD_Command+0x24>
 16c:	00 00       	nop

	_delay_us(200);

	LCD_Data_Port = (LCD_Data_Port & 0x0F) | (cmd << 4);  
 16e:	28 b3       	in	r18, 0x18	; 24
 170:	2f 70       	andi	r18, 0x0F	; 15
 172:	f0 e1       	ldi	r31, 0x10	; 16
 174:	8f 9f       	mul	r24, r31
 176:	c0 01       	movw	r24, r0
 178:	11 24       	eor	r1, r1
 17a:	82 2b       	or	r24, r18
 17c:	88 bb       	out	0x18, r24	; 24
	LCD_Data_Port |= (1<<EN);
 17e:	c0 9a       	sbi	0x18, 0	; 24
 180:	32 e0       	ldi	r19, 0x02	; 2
 182:	3a 95       	dec	r19
 184:	f1 f7       	brne	.-4      	; 0x182 <LCD_Command+0x3a>
 186:	00 c0       	rjmp	.+0      	; 0x188 <LCD_Command+0x40>
	_delay_us(1);
	LCD_Data_Port &= ~ (1<<EN);
 188:	c0 98       	cbi	0x18, 0	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 18a:	8f e9       	ldi	r24, 0x9F	; 159
 18c:	9f e0       	ldi	r25, 0x0F	; 15
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <LCD_Command+0x46>
 192:	00 c0       	rjmp	.+0      	; 0x194 <LCD_Command+0x4c>
 194:	00 00       	nop
 196:	08 95       	ret

00000198 <LCD_Char>:
	_delay_ms(2);
}


void LCD_Char (char char_data){
	LCD_Data_Port = (LCD_Data_Port & 0x0F) | (char_data & 0xF0); 
 198:	98 b3       	in	r25, 0x18	; 24
 19a:	9f 70       	andi	r25, 0x0F	; 15
 19c:	28 2f       	mov	r18, r24
 19e:	20 7f       	andi	r18, 0xF0	; 240
 1a0:	92 2b       	or	r25, r18
 1a2:	98 bb       	out	0x18, r25	; 24
	LCD_Data_Port |= (1<<RS);		
 1a4:	c2 9a       	sbi	0x18, 2	; 24
	LCD_Data_Port|= (1<<EN);
 1a6:	c0 9a       	sbi	0x18, 0	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a8:	32 e0       	ldi	r19, 0x02	; 2
 1aa:	3a 95       	dec	r19
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <LCD_Char+0x12>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <LCD_Char+0x18>
	_delay_us(1);
	LCD_Data_Port &= ~ (1<<EN);
 1b0:	c0 98       	cbi	0x18, 0	; 24
 1b2:	ef e8       	ldi	r30, 0x8F	; 143
 1b4:	f1 e0       	ldi	r31, 0x01	; 1
 1b6:	31 97       	sbiw	r30, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCD_Char+0x1e>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <LCD_Char+0x24>
 1bc:	00 00       	nop

	_delay_us(200);

	LCD_Data_Port = (LCD_Data_Port & 0x0F) | (char_data << 4); 
 1be:	28 b3       	in	r18, 0x18	; 24
 1c0:	2f 70       	andi	r18, 0x0F	; 15
 1c2:	f0 e1       	ldi	r31, 0x10	; 16
 1c4:	8f 9f       	mul	r24, r31
 1c6:	c0 01       	movw	r24, r0
 1c8:	11 24       	eor	r1, r1
 1ca:	82 2b       	or	r24, r18
 1cc:	88 bb       	out	0x18, r24	; 24
	LCD_Data_Port |= (1<<EN);
 1ce:	c0 9a       	sbi	0x18, 0	; 24
 1d0:	32 e0       	ldi	r19, 0x02	; 2
 1d2:	3a 95       	dec	r19
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <LCD_Char+0x3a>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <LCD_Char+0x40>
	_delay_us(1);
	LCD_Data_Port &= ~ (1<<EN);
 1d8:	c0 98       	cbi	0x18, 0	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1da:	8f e9       	ldi	r24, 0x9F	; 159
 1dc:	9f e0       	ldi	r25, 0x0F	; 15
 1de:	01 97       	sbiw	r24, 0x01	; 1
 1e0:	f1 f7       	brne	.-4      	; 0x1de <LCD_Char+0x46>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <LCD_Char+0x4c>
 1e4:	00 00       	nop
 1e6:	08 95       	ret

000001e8 <LCD_Init>:
	_delay_ms(2);
}

void LCD_Init (void)		
{
	LCD_Data_Dir = 0xFF;			
 1e8:	8f ef       	ldi	r24, 0xFF	; 255
 1ea:	87 bb       	out	0x17, r24	; 23
 1ec:	8f e3       	ldi	r24, 0x3F	; 63
 1ee:	9c e9       	ldi	r25, 0x9C	; 156
 1f0:	01 97       	sbiw	r24, 0x01	; 1
 1f2:	f1 f7       	brne	.-4      	; 0x1f0 <LCD_Init+0x8>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <LCD_Init+0xe>
 1f6:	00 00       	nop
	_delay_ms(20);			
	LCD_Command(0x02);		
 1f8:	82 e0       	ldi	r24, 0x02	; 2
 1fa:	a6 df       	rcall	.-180    	; 0x148 <LCD_Command>
	LCD_Command(0x28);      
 1fc:	88 e2       	ldi	r24, 0x28	; 40
 1fe:	a4 df       	rcall	.-184    	; 0x148 <LCD_Command>
	LCD_Command(0x0c);          
 200:	8c e0       	ldi	r24, 0x0C	; 12
 202:	a2 df       	rcall	.-188    	; 0x148 <LCD_Command>
	LCD_Command(0x06);             
 204:	86 e0       	ldi	r24, 0x06	; 6
 206:	a0 df       	rcall	.-192    	; 0x148 <LCD_Command>
	LCD_Command(0x01);             
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	9e df       	rcall	.-196    	; 0x148 <LCD_Command>
 20c:	8f e9       	ldi	r24, 0x9F	; 159
 20e:	9f e0       	ldi	r25, 0x0F	; 15
 210:	01 97       	sbiw	r24, 0x01	; 1
 212:	f1 f7       	brne	.-4      	; 0x210 <LCD_Init+0x28>
 214:	00 c0       	rjmp	.+0      	; 0x216 <LCD_Init+0x2e>
 216:	00 00       	nop
 218:	08 95       	ret

0000021a <LCD_String>:
	_delay_ms(2);
}


void LCD_String (char *str){		
 21a:	cf 93       	push	r28
 21c:	df 93       	push	r29
 21e:	ec 01       	movw	r28, r24
	int i;
	for(i=0;str[i]!=0;i++){		
 220:	88 81       	ld	r24, Y
 222:	88 23       	and	r24, r24
 224:	29 f0       	breq	.+10     	; 0x230 <LCD_String+0x16>
 226:	21 96       	adiw	r28, 0x01	; 1
	
		LCD_Char (str[i]);
 228:	b7 df       	rcall	.-146    	; 0x198 <LCD_Char>
}


void LCD_String (char *str){		
	int i;
	for(i=0;str[i]!=0;i++){		
 22a:	89 91       	ld	r24, Y+
 22c:	81 11       	cpse	r24, r1
 22e:	fc cf       	rjmp	.-8      	; 0x228 <LCD_String+0xe>
	
		LCD_Char (str[i]);
	}
}
 230:	df 91       	pop	r29
 232:	cf 91       	pop	r28
 234:	08 95       	ret

00000236 <LCD_String_xy>:

void LCD_String_xy (char row, char pos, char *str){	
 236:	cf 93       	push	r28
 238:	df 93       	push	r29
 23a:	ea 01       	movw	r28, r20
	if (row == 0 && pos<16)
 23c:	81 11       	cpse	r24, r1
 23e:	07 c0       	rjmp	.+14     	; 0x24e <LCD_String_xy+0x18>
 240:	60 31       	cpi	r22, 0x10	; 16
 242:	68 f4       	brcc	.+26     	; 0x25e <LCD_String_xy+0x28>
	LCD_Command((pos & 0x0F)|0x80);	
 244:	86 2f       	mov	r24, r22
 246:	8f 70       	andi	r24, 0x0F	; 15
 248:	80 68       	ori	r24, 0x80	; 128
 24a:	7e df       	rcall	.-260    	; 0x148 <LCD_Command>
 24c:	08 c0       	rjmp	.+16     	; 0x25e <LCD_String_xy+0x28>
	else if (row == 1 && pos<16)
 24e:	81 30       	cpi	r24, 0x01	; 1
 250:	31 f4       	brne	.+12     	; 0x25e <LCD_String_xy+0x28>
 252:	60 31       	cpi	r22, 0x10	; 16
 254:	20 f4       	brcc	.+8      	; 0x25e <LCD_String_xy+0x28>
	LCD_Command((pos & 0x0F)|0xC0);	
 256:	86 2f       	mov	r24, r22
 258:	8f 70       	andi	r24, 0x0F	; 15
 25a:	80 6c       	ori	r24, 0xC0	; 192
 25c:	75 df       	rcall	.-278    	; 0x148 <LCD_Command>
	LCD_String(str);		
 25e:	ce 01       	movw	r24, r28
 260:	dc df       	rcall	.-72     	; 0x21a <LCD_String>
}
 262:	df 91       	pop	r29
 264:	cf 91       	pop	r28
 266:	08 95       	ret

00000268 <LCD_Clear>:

void LCD_Clear(){
	LCD_Command (0x01);		
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	6e df       	rcall	.-292    	; 0x148 <LCD_Command>
 26c:	8f e9       	ldi	r24, 0x9F	; 159
 26e:	9f e0       	ldi	r25, 0x0F	; 15
 270:	01 97       	sbiw	r24, 0x01	; 1
 272:	f1 f7       	brne	.-4      	; 0x270 <LCD_Clear+0x8>
 274:	00 c0       	rjmp	.+0      	; 0x276 <LCD_Clear+0xe>
 276:	00 00       	nop
	_delay_ms(2);
	LCD_Command (0x80);		
 278:	80 e8       	ldi	r24, 0x80	; 128
 27a:	66 df       	rcall	.-308    	; 0x148 <LCD_Command>
 27c:	08 95       	ret

0000027e <ADC_Init>:
#include <stdio.h>
#include <stdlib.h>
#include "LCD.h"

void ADC_Init(){
	DDRC &= ~(1<<0);
 27e:	a0 98       	cbi	0x14, 0	; 20
	DDRC &= ~(1<<1);
 280:	a1 98       	cbi	0x14, 1	; 20
	DDRC &= ~(1<<2);
 282:	a2 98       	cbi	0x14, 2	; 20
	ADCSRA = 0b10000111;
 284:	87 e8       	ldi	r24, 0x87	; 135
 286:	86 b9       	out	0x06, r24	; 6
	ADMUX = 0b01000000;
 288:	80 e4       	ldi	r24, 0x40	; 64
 28a:	87 b9       	out	0x07, r24	; 7
 28c:	08 95       	ret

0000028e <Read_V>:
}

float Read_V(){
 28e:	cf 92       	push	r12
 290:	df 92       	push	r13
 292:	ef 92       	push	r14
 294:	ff 92       	push	r15
	float Value_V;
	ADMUX = 0b01000000;
 296:	80 e4       	ldi	r24, 0x40	; 64
 298:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADSC);
 29a:	36 9a       	sbi	0x06, 6	; 6
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 29c:	87 ec       	ldi	r24, 0xC7	; 199
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	01 97       	sbiw	r24, 0x01	; 1
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <Read_V+0x12>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <Read_V+0x18>
 2a6:	00 00       	nop
	while ( ADIF == 0 );
	_delay_us(100);
	Value_V = (float)ADCL;
 2a8:	64 b1       	in	r22, 0x04	; 4
 2aa:	70 e0       	ldi	r23, 0x00	; 0
 2ac:	80 e0       	ldi	r24, 0x00	; 0
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	c8 d2       	rcall	.+1424   	; 0x842 <__floatunsisf>
 2b2:	6b 01       	movw	r12, r22
 2b4:	7c 01       	movw	r14, r24
	Value_V = (((float)ADCH * 256) + Value_V);
 2b6:	65 b1       	in	r22, 0x05	; 5
	Value_V = (Value_V * 15 / 1023);
 2b8:	70 e0       	ldi	r23, 0x00	; 0
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	c1 d2       	rcall	.+1410   	; 0x842 <__floatunsisf>
 2c0:	20 e0       	ldi	r18, 0x00	; 0
 2c2:	30 e0       	ldi	r19, 0x00	; 0
 2c4:	40 e8       	ldi	r20, 0x80	; 128
 2c6:	53 e4       	ldi	r21, 0x43	; 67
 2c8:	72 d3       	rcall	.+1764   	; 0x9ae <__mulsf3>
 2ca:	a7 01       	movw	r20, r14
 2cc:	96 01       	movw	r18, r12
 2ce:	e9 d1       	rcall	.+978    	; 0x6a2 <__addsf3>
 2d0:	20 e0       	ldi	r18, 0x00	; 0
 2d2:	30 e0       	ldi	r19, 0x00	; 0
 2d4:	40 e7       	ldi	r20, 0x70	; 112
 2d6:	51 e4       	ldi	r21, 0x41	; 65
 2d8:	6a d3       	rcall	.+1748   	; 0x9ae <__mulsf3>
	return (Value_V);
 2da:	20 e0       	ldi	r18, 0x00	; 0
 2dc:	30 ec       	ldi	r19, 0xC0	; 192
 2de:	4f e7       	ldi	r20, 0x7F	; 127
 2e0:	54 e4       	ldi	r21, 0x44	; 68
 2e2:	47 d2       	rcall	.+1166   	; 0x772 <__divsf3>
}
 2e4:	ff 90       	pop	r15
 2e6:	ef 90       	pop	r14
 2e8:	df 90       	pop	r13
 2ea:	cf 90       	pop	r12
 2ec:	08 95       	ret

000002ee <Read_A>:

float Read_A(){
 2ee:	cf 92       	push	r12
 2f0:	df 92       	push	r13
 2f2:	ef 92       	push	r14
 2f4:	ff 92       	push	r15
	float Value_A;
	ADMUX = 0b01000001;
 2f6:	81 e4       	ldi	r24, 0x41	; 65
 2f8:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADSC);
 2fa:	36 9a       	sbi	0x06, 6	; 6
 2fc:	87 ec       	ldi	r24, 0xC7	; 199
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	01 97       	sbiw	r24, 0x01	; 1
 302:	f1 f7       	brne	.-4      	; 0x300 <Read_A+0x12>
 304:	00 c0       	rjmp	.+0      	; 0x306 <Read_A+0x18>
 306:	00 00       	nop
	while ( ADIF == 0 );
	_delay_us(100);
	Value_A = (float)ADCL;
 308:	64 b1       	in	r22, 0x04	; 4
 30a:	70 e0       	ldi	r23, 0x00	; 0
 30c:	80 e0       	ldi	r24, 0x00	; 0
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	98 d2       	rcall	.+1328   	; 0x842 <__floatunsisf>
 312:	6b 01       	movw	r12, r22
 314:	7c 01       	movw	r14, r24
	Value_A = (((float)ADCH * 256) + Value_A);
 316:	65 b1       	in	r22, 0x05	; 5
	Value_A = (Value_A * 50 / 1023);
 318:	70 e0       	ldi	r23, 0x00	; 0
 31a:	80 e0       	ldi	r24, 0x00	; 0
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	91 d2       	rcall	.+1314   	; 0x842 <__floatunsisf>
 320:	20 e0       	ldi	r18, 0x00	; 0
 322:	30 e0       	ldi	r19, 0x00	; 0
 324:	40 e8       	ldi	r20, 0x80	; 128
 326:	53 e4       	ldi	r21, 0x43	; 67
 328:	42 d3       	rcall	.+1668   	; 0x9ae <__mulsf3>
 32a:	a7 01       	movw	r20, r14
 32c:	96 01       	movw	r18, r12
 32e:	b9 d1       	rcall	.+882    	; 0x6a2 <__addsf3>
 330:	20 e0       	ldi	r18, 0x00	; 0
 332:	30 e0       	ldi	r19, 0x00	; 0
 334:	48 e4       	ldi	r20, 0x48	; 72
 336:	52 e4       	ldi	r21, 0x42	; 66
 338:	3a d3       	rcall	.+1652   	; 0x9ae <__mulsf3>
	return (Value_A);
 33a:	20 e0       	ldi	r18, 0x00	; 0
 33c:	30 ec       	ldi	r19, 0xC0	; 192
 33e:	4f e7       	ldi	r20, 0x7F	; 127
 340:	54 e4       	ldi	r21, 0x44	; 68
 342:	17 d2       	rcall	.+1070   	; 0x772 <__divsf3>
}
 344:	ff 90       	pop	r15
 346:	ef 90       	pop	r14
 348:	df 90       	pop	r13
 34a:	cf 90       	pop	r12
 34c:	08 95       	ret

0000034e <Read_T>:

float Read_T(){
 34e:	cf 92       	push	r12
 350:	df 92       	push	r13
 352:	ef 92       	push	r14
 354:	ff 92       	push	r15
	float Value_T;
	ADMUX = 0b01000000;
 356:	80 e4       	ldi	r24, 0x40	; 64
 358:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADSC);
 35a:	36 9a       	sbi	0x06, 6	; 6
 35c:	87 ec       	ldi	r24, 0xC7	; 199
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	01 97       	sbiw	r24, 0x01	; 1
 362:	f1 f7       	brne	.-4      	; 0x360 <Read_T+0x12>
 364:	00 c0       	rjmp	.+0      	; 0x366 <Read_T+0x18>
 366:	00 00       	nop
	while ( ADIF == 0 );
	_delay_us(100);
	Value_T = (float)ADCL;
 368:	64 b1       	in	r22, 0x04	; 4
 36a:	70 e0       	ldi	r23, 0x00	; 0
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	68 d2       	rcall	.+1232   	; 0x842 <__floatunsisf>
 372:	6b 01       	movw	r12, r22
 374:	7c 01       	movw	r14, r24
	Value_T = (((float)ADCH * 256) + Value_T);
 376:	65 b1       	in	r22, 0x05	; 5
	Value_T = (Value_T * 15 / 1023);
 378:	70 e0       	ldi	r23, 0x00	; 0
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	61 d2       	rcall	.+1218   	; 0x842 <__floatunsisf>
 380:	20 e0       	ldi	r18, 0x00	; 0
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	40 e8       	ldi	r20, 0x80	; 128
 386:	53 e4       	ldi	r21, 0x43	; 67
 388:	12 d3       	rcall	.+1572   	; 0x9ae <__mulsf3>
 38a:	a7 01       	movw	r20, r14
 38c:	96 01       	movw	r18, r12
 38e:	89 d1       	rcall	.+786    	; 0x6a2 <__addsf3>
 390:	20 e0       	ldi	r18, 0x00	; 0
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	40 e7       	ldi	r20, 0x70	; 112
 396:	51 e4       	ldi	r21, 0x41	; 65
 398:	0a d3       	rcall	.+1556   	; 0x9ae <__mulsf3>
	return (Value_T);
 39a:	20 e0       	ldi	r18, 0x00	; 0
 39c:	30 ec       	ldi	r19, 0xC0	; 192
 39e:	4f e7       	ldi	r20, 0x7F	; 127
 3a0:	54 e4       	ldi	r21, 0x44	; 68
 3a2:	e7 d1       	rcall	.+974    	; 0x772 <__divsf3>
}
 3a4:	ff 90       	pop	r15
 3a6:	ef 90       	pop	r14
 3a8:	df 90       	pop	r13
 3aa:	cf 90       	pop	r12
 3ac:	08 95       	ret

000003ae <main>:

int main(void) {
 3ae:	cf 93       	push	r28
 3b0:	df 93       	push	r29
 3b2:	cd b7       	in	r28, 0x3d	; 61
 3b4:	de b7       	in	r29, 0x3e	; 62
 3b6:	2f 97       	sbiw	r28, 0x0f	; 15
 3b8:	0f b6       	in	r0, 0x3f	; 63
 3ba:	f8 94       	cli
 3bc:	de bf       	out	0x3e, r29	; 62
 3be:	0f be       	out	0x3f, r0	; 63
 3c0:	cd bf       	out	0x3d, r28	; 61
	LCD_Init();
 3c2:	12 df       	rcall	.-476    	; 0x1e8 <LCD_Init>
	ADC_Init();
 3c4:	5c df       	rcall	.-328    	; 0x27e <ADC_Init>
	DDRD = 0b11000000;
 3c6:	80 ec       	ldi	r24, 0xC0	; 192
 3c8:	81 bb       	out	0x11, r24	; 17
	float VBAT,ABAT,TBAT;
	char SVBAT[5],SABAT[5],STBAT[5];
	while (1) {
		VBAT = Read_V();
 3ca:	61 df       	rcall	.-318    	; 0x28e <Read_V>
 3cc:	6b 01       	movw	r12, r22
 3ce:	7c 01       	movw	r14, r24
		TBAT = Read_T();
 3d0:	be df       	rcall	.-132    	; 0x34e <Read_T>
 3d2:	4b 01       	movw	r8, r22
 3d4:	5c 01       	movw	r10, r24
		dtostrf(VBAT,5,2,SVBAT);
 3d6:	8e 01       	movw	r16, r28
 3d8:	0f 5f       	subi	r16, 0xFF	; 255
 3da:	1f 4f       	sbci	r17, 0xFF	; 255
 3dc:	22 e0       	ldi	r18, 0x02	; 2
 3de:	45 e0       	ldi	r20, 0x05	; 5
 3e0:	c7 01       	movw	r24, r14
 3e2:	b6 01       	movw	r22, r12
 3e4:	47 d3       	rcall	.+1678   	; 0xa74 <dtostrf>
		dtostrf(TBAT,5,2,STBAT);
 3e6:	06 5f       	subi	r16, 0xF6	; 246
 3e8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ea:	22 e0       	ldi	r18, 0x02	; 2
 3ec:	45 e0       	ldi	r20, 0x05	; 5
 3ee:	c5 01       	movw	r24, r10
 3f0:	b4 01       	movw	r22, r8
 3f2:	40 d3       	rcall	.+1664   	; 0xa74 <dtostrf>
		if (VBAT>13.7) {
 3f4:	23 e3       	ldi	r18, 0x33	; 51
 3f6:	33 e3       	ldi	r19, 0x33	; 51
 3f8:	4b e5       	ldi	r20, 0x5B	; 91
 3fa:	51 e4       	ldi	r21, 0x41	; 65
 3fc:	c7 01       	movw	r24, r14
 3fe:	b6 01       	movw	r22, r12
 400:	d2 d2       	rcall	.+1444   	; 0x9a6 <__gesf2>
 402:	18 16       	cp	r1, r24
 404:	dc f4       	brge	.+54     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
			LCD_String_xy(0,0,"BAT is full");
 406:	40 e6       	ldi	r20, 0x60	; 96
 408:	50 e0       	ldi	r21, 0x00	; 0
 40a:	60 e0       	ldi	r22, 0x00	; 0
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	13 df       	rcall	.-474    	; 0x236 <LCD_String_xy>
			LCD_String_xy(1,0,"V:");
 410:	4c e6       	ldi	r20, 0x6C	; 108
 412:	50 e0       	ldi	r21, 0x00	; 0
 414:	60 e0       	ldi	r22, 0x00	; 0
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	0e df       	rcall	.-484    	; 0x236 <LCD_String_xy>
			LCD_String_xy(1,2,SVBAT);
 41a:	ae 01       	movw	r20, r28
 41c:	4f 5f       	subi	r20, 0xFF	; 255
 41e:	5f 4f       	sbci	r21, 0xFF	; 255
 420:	62 e0       	ldi	r22, 0x02	; 2
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	08 df       	rcall	.-496    	; 0x236 <LCD_String_xy>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 426:	2f ef       	ldi	r18, 0xFF	; 255
 428:	80 e7       	ldi	r24, 0x70	; 112
 42a:	92 e0       	ldi	r25, 0x02	; 2
 42c:	21 50       	subi	r18, 0x01	; 1
 42e:	80 40       	sbci	r24, 0x00	; 0
 430:	90 40       	sbci	r25, 0x00	; 0
 432:	e1 f7       	brne	.-8      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 434:	00 c0       	rjmp	.+0      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 436:	00 00       	nop
			_delay_ms(100);
			LCD_Clear();
 438:	17 df       	rcall	.-466    	; 0x268 <LCD_Clear>
 43a:	c7 cf       	rjmp	.-114    	; 0x3ca <main+0x1c>
		}
		else if (8<=VBAT&&VBAT<=13.7) {
 43c:	20 e0       	ldi	r18, 0x00	; 0
 43e:	30 e0       	ldi	r19, 0x00	; 0
 440:	40 e0       	ldi	r20, 0x00	; 0
 442:	51 e4       	ldi	r21, 0x41	; 65
 444:	c7 01       	movw	r24, r14
 446:	b6 01       	movw	r22, r12
 448:	ae d2       	rcall	.+1372   	; 0x9a6 <__gesf2>
 44a:	88 23       	and	r24, r24
 44c:	0c f4       	brge	.+2      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 44e:	dc c0       	rjmp	.+440    	; 0x608 <__stack+0x1a9>
 450:	23 e3       	ldi	r18, 0x33	; 51
 452:	33 e3       	ldi	r19, 0x33	; 51
 454:	4b e5       	ldi	r20, 0x5B	; 91
 456:	51 e4       	ldi	r21, 0x41	; 65
 458:	c7 01       	movw	r24, r14
 45a:	b6 01       	movw	r22, r12
 45c:	86 d1       	rcall	.+780    	; 0x76a <__cmpsf2>
 45e:	18 16       	cp	r1, r24
 460:	0c f4       	brge	.+2      	; 0x464 <__stack+0x5>
 462:	d2 c0       	rjmp	.+420    	; 0x608 <__stack+0x1a9>
			if (TBAT>=60) {
 464:	20 e0       	ldi	r18, 0x00	; 0
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	40 e7       	ldi	r20, 0x70	; 112
 46a:	52 e4       	ldi	r21, 0x42	; 66
 46c:	c5 01       	movw	r24, r10
 46e:	b4 01       	movw	r22, r8
 470:	9a d2       	rcall	.+1332   	; 0x9a6 <__gesf2>
 472:	88 23       	and	r24, r24
 474:	ec f0       	brlt	.+58     	; 0x4b0 <__stack+0x51>
				PORTD |= (1<<6);
 476:	96 9a       	sbi	0x12, 6	; 18
				LCD_String_xy(0,0,"BAT is hot!");
 478:	4f e6       	ldi	r20, 0x6F	; 111
 47a:	50 e0       	ldi	r21, 0x00	; 0
 47c:	60 e0       	ldi	r22, 0x00	; 0
 47e:	80 e0       	ldi	r24, 0x00	; 0
 480:	da de       	rcall	.-588    	; 0x236 <LCD_String_xy>
				LCD_String_xy(1,0,"T:");
 482:	4b e7       	ldi	r20, 0x7B	; 123
 484:	50 e0       	ldi	r21, 0x00	; 0
 486:	60 e0       	ldi	r22, 0x00	; 0
 488:	81 e0       	ldi	r24, 0x01	; 1
 48a:	d5 de       	rcall	.-598    	; 0x236 <LCD_String_xy>
				LCD_String_xy(1,2,STBAT);
 48c:	ae 01       	movw	r20, r28
 48e:	45 5f       	subi	r20, 0xF5	; 245
 490:	5f 4f       	sbci	r21, 0xFF	; 255
 492:	62 e0       	ldi	r22, 0x02	; 2
 494:	81 e0       	ldi	r24, 0x01	; 1
 496:	cf de       	rcall	.-610    	; 0x236 <LCD_String_xy>
 498:	2f ef       	ldi	r18, 0xFF	; 255
 49a:	80 e7       	ldi	r24, 0x70	; 112
 49c:	92 e0       	ldi	r25, 0x02	; 2
 49e:	21 50       	subi	r18, 0x01	; 1
 4a0:	80 40       	sbci	r24, 0x00	; 0
 4a2:	90 40       	sbci	r25, 0x00	; 0
 4a4:	e1 f7       	brne	.-8      	; 0x49e <__stack+0x3f>
 4a6:	00 c0       	rjmp	.+0      	; 0x4a8 <__stack+0x49>
 4a8:	00 00       	nop
				_delay_ms(100);
				LCD_Clear();
 4aa:	de de       	rcall	.-580    	; 0x268 <LCD_Clear>
				PORTD &= ~(1<<6);
 4ac:	96 98       	cbi	0x12, 6	; 18
 4ae:	8d cf       	rjmp	.-230    	; 0x3ca <main+0x1c>
			}
			else if (40<TBAT&&TBAT<60) {
 4b0:	20 e0       	ldi	r18, 0x00	; 0
 4b2:	30 e0       	ldi	r19, 0x00	; 0
 4b4:	40 e2       	ldi	r20, 0x20	; 32
 4b6:	52 e4       	ldi	r21, 0x42	; 66
 4b8:	c5 01       	movw	r24, r10
 4ba:	b4 01       	movw	r22, r8
 4bc:	74 d2       	rcall	.+1256   	; 0x9a6 <__gesf2>
 4be:	18 16       	cp	r1, r24
 4c0:	0c f0       	brlt	.+2      	; 0x4c4 <__stack+0x65>
 4c2:	59 c0       	rjmp	.+178    	; 0x576 <__stack+0x117>
 4c4:	20 e0       	ldi	r18, 0x00	; 0
 4c6:	30 e0       	ldi	r19, 0x00	; 0
 4c8:	40 e7       	ldi	r20, 0x70	; 112
 4ca:	52 e4       	ldi	r21, 0x42	; 66
 4cc:	c5 01       	movw	r24, r10
 4ce:	b4 01       	movw	r22, r8
 4d0:	4c d1       	rcall	.+664    	; 0x76a <__cmpsf2>
 4d2:	88 23       	and	r24, r24
 4d4:	0c f0       	brlt	.+2      	; 0x4d8 <__stack+0x79>
 4d6:	4f c0       	rjmp	.+158    	; 0x576 <__stack+0x117>
				PORTD |= (1<<6);
 4d8:	96 9a       	sbi	0x12, 6	; 18
				PORTD |= (1<<7);
 4da:	97 9a       	sbi	0x12, 7	; 18
				LCD_String_xy(1,0,"V:");
 4dc:	4c e6       	ldi	r20, 0x6C	; 108
 4de:	50 e0       	ldi	r21, 0x00	; 0
 4e0:	60 e0       	ldi	r22, 0x00	; 0
 4e2:	81 e0       	ldi	r24, 0x01	; 1
 4e4:	a8 de       	rcall	.-688    	; 0x236 <LCD_String_xy>
				LCD_String_xy(1,2,SVBAT);
 4e6:	ae 01       	movw	r20, r28
 4e8:	4f 5f       	subi	r20, 0xFF	; 255
 4ea:	5f 4f       	sbci	r21, 0xFF	; 255
 4ec:	62 e0       	ldi	r22, 0x02	; 2
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	a2 de       	rcall	.-700    	; 0x236 <LCD_String_xy>
 4f2:	0f 2e       	mov	r0, r31
 4f4:	fc e1       	ldi	r31, 0x1C	; 28
 4f6:	ef 2e       	mov	r14, r31
 4f8:	f1 2c       	mov	r15, r1
 4fa:	f0 2d       	mov	r31, r0
				for (int X=0;X<28;X++) {
					ABAT = Read_A();
 4fc:	f8 de       	rcall	.-528    	; 0x2ee <Read_A>
					dtostrf(ABAT,5,2,SABAT);
 4fe:	8e 01       	movw	r16, r28
 500:	0a 5f       	subi	r16, 0xFA	; 250
 502:	1f 4f       	sbci	r17, 0xFF	; 255
 504:	22 e0       	ldi	r18, 0x02	; 2
 506:	45 e0       	ldi	r20, 0x05	; 5
 508:	b5 d2       	rcall	.+1386   	; 0xa74 <dtostrf>
					LCD_String_xy(1,10,"A:");
 50a:	4e e7       	ldi	r20, 0x7E	; 126
 50c:	50 e0       	ldi	r21, 0x00	; 0
 50e:	6a e0       	ldi	r22, 0x0A	; 10
 510:	81 e0       	ldi	r24, 0x01	; 1
 512:	91 de       	rcall	.-734    	; 0x236 <LCD_String_xy>
					LCD_String_xy(1,12,SABAT);
 514:	a8 01       	movw	r20, r16
 516:	6c e0       	ldi	r22, 0x0C	; 12
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	8d de       	rcall	.-742    	; 0x236 <LCD_String_xy>
					LCD_String_xy(0,0,"BAT is charging");
 51c:	41 e8       	ldi	r20, 0x81	; 129
 51e:	50 e0       	ldi	r21, 0x00	; 0
 520:	60 e0       	ldi	r22, 0x00	; 0
 522:	80 e0       	ldi	r24, 0x00	; 0
 524:	88 de       	rcall	.-752    	; 0x236 <LCD_String_xy>
 526:	2f ef       	ldi	r18, 0xFF	; 255
 528:	84 e3       	ldi	r24, 0x34	; 52
 52a:	9c e0       	ldi	r25, 0x0C	; 12
 52c:	21 50       	subi	r18, 0x01	; 1
 52e:	80 40       	sbci	r24, 0x00	; 0
 530:	90 40       	sbci	r25, 0x00	; 0
 532:	e1 f7       	brne	.-8      	; 0x52c <__stack+0xcd>
 534:	00 c0       	rjmp	.+0      	; 0x536 <__stack+0xd7>
 536:	00 00       	nop
					_delay_ms(500);
					LCD_String_xy(0,0,"BAT is hot!    ");
 538:	41 e9       	ldi	r20, 0x91	; 145
 53a:	50 e0       	ldi	r21, 0x00	; 0
 53c:	60 e0       	ldi	r22, 0x00	; 0
 53e:	80 e0       	ldi	r24, 0x00	; 0
 540:	7a de       	rcall	.-780    	; 0x236 <LCD_String_xy>
 542:	2f ef       	ldi	r18, 0xFF	; 255
 544:	84 e3       	ldi	r24, 0x34	; 52
 546:	9c e0       	ldi	r25, 0x0C	; 12
 548:	21 50       	subi	r18, 0x01	; 1
 54a:	80 40       	sbci	r24, 0x00	; 0
 54c:	90 40       	sbci	r25, 0x00	; 0
 54e:	e1 f7       	brne	.-8      	; 0x548 <__stack+0xe9>
 550:	00 c0       	rjmp	.+0      	; 0x552 <__stack+0xf3>
 552:	00 00       	nop
 554:	21 e0       	ldi	r18, 0x01	; 1
 556:	e2 1a       	sub	r14, r18
 558:	f1 08       	sbc	r15, r1
			else if (40<TBAT&&TBAT<60) {
				PORTD |= (1<<6);
				PORTD |= (1<<7);
				LCD_String_xy(1,0,"V:");
				LCD_String_xy(1,2,SVBAT);
				for (int X=0;X<28;X++) {
 55a:	81 f6       	brne	.-96     	; 0x4fc <__stack+0x9d>
					LCD_String_xy(0,0,"BAT is charging");
					_delay_ms(500);
					LCD_String_xy(0,0,"BAT is hot!    ");
					_delay_ms(500);
				}
				PORTD &= ~(1<<6);
 55c:	96 98       	cbi	0x12, 6	; 18
				PORTD &= ~(1<<7);
 55e:	97 98       	cbi	0x12, 7	; 18
 560:	8f ef       	ldi	r24, 0xFF	; 255
 562:	93 ed       	ldi	r25, 0xD3	; 211
 564:	20 e3       	ldi	r18, 0x30	; 48
 566:	81 50       	subi	r24, 0x01	; 1
 568:	90 40       	sbci	r25, 0x00	; 0
 56a:	20 40       	sbci	r18, 0x00	; 0
 56c:	e1 f7       	brne	.-8      	; 0x566 <__stack+0x107>
 56e:	00 c0       	rjmp	.+0      	; 0x570 <__stack+0x111>
 570:	00 00       	nop
				_delay_ms(2000);
				LCD_Clear();
 572:	7a de       	rcall	.-780    	; 0x268 <LCD_Clear>
 574:	2a cf       	rjmp	.-428    	; 0x3ca <main+0x1c>
			}
			else if (40>=TBAT) {
 576:	20 e0       	ldi	r18, 0x00	; 0
 578:	30 e0       	ldi	r19, 0x00	; 0
 57a:	40 e2       	ldi	r20, 0x20	; 32
 57c:	52 e4       	ldi	r21, 0x42	; 66
 57e:	c5 01       	movw	r24, r10
 580:	b4 01       	movw	r22, r8
 582:	f3 d0       	rcall	.+486    	; 0x76a <__cmpsf2>
 584:	18 16       	cp	r1, r24
 586:	0c f4       	brge	.+2      	; 0x58a <__stack+0x12b>
 588:	20 cf       	rjmp	.-448    	; 0x3ca <main+0x1c>
				PORTD |= (1<<7);
 58a:	97 9a       	sbi	0x12, 7	; 18
				LCD_String_xy(0,0,"BAT is charging");
 58c:	41 e8       	ldi	r20, 0x81	; 129
 58e:	50 e0       	ldi	r21, 0x00	; 0
 590:	60 e0       	ldi	r22, 0x00	; 0
 592:	80 e0       	ldi	r24, 0x00	; 0
 594:	50 de       	rcall	.-864    	; 0x236 <LCD_String_xy>
				LCD_String_xy(1,0,"V:");
 596:	4c e6       	ldi	r20, 0x6C	; 108
 598:	50 e0       	ldi	r21, 0x00	; 0
 59a:	60 e0       	ldi	r22, 0x00	; 0
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	4b de       	rcall	.-874    	; 0x236 <LCD_String_xy>
				LCD_String_xy(1,2,SVBAT);
 5a0:	ae 01       	movw	r20, r28
 5a2:	4f 5f       	subi	r20, 0xFF	; 255
 5a4:	5f 4f       	sbci	r21, 0xFF	; 255
 5a6:	62 e0       	ldi	r22, 0x02	; 2
 5a8:	81 e0       	ldi	r24, 0x01	; 1
 5aa:	45 de       	rcall	.-886    	; 0x236 <LCD_String_xy>
 5ac:	0f 2e       	mov	r0, r31
 5ae:	f8 e3       	ldi	r31, 0x38	; 56
 5b0:	ef 2e       	mov	r14, r31
 5b2:	f1 2c       	mov	r15, r1
 5b4:	f0 2d       	mov	r31, r0
				for (int Y=0;Y<56;Y++) {
					ABAT = Read_A();
 5b6:	9b de       	rcall	.-714    	; 0x2ee <Read_A>
					dtostrf(ABAT,5,2,SABAT);
 5b8:	8e 01       	movw	r16, r28
 5ba:	0a 5f       	subi	r16, 0xFA	; 250
 5bc:	1f 4f       	sbci	r17, 0xFF	; 255
 5be:	22 e0       	ldi	r18, 0x02	; 2
 5c0:	45 e0       	ldi	r20, 0x05	; 5
 5c2:	58 d2       	rcall	.+1200   	; 0xa74 <dtostrf>
					LCD_String_xy(1,10,"A:");
 5c4:	4e e7       	ldi	r20, 0x7E	; 126
 5c6:	50 e0       	ldi	r21, 0x00	; 0
 5c8:	6a e0       	ldi	r22, 0x0A	; 10
 5ca:	81 e0       	ldi	r24, 0x01	; 1
 5cc:	34 de       	rcall	.-920    	; 0x236 <LCD_String_xy>
					LCD_String_xy(1,12,SABAT);
 5ce:	a8 01       	movw	r20, r16
 5d0:	6c e0       	ldi	r22, 0x0C	; 12
 5d2:	81 e0       	ldi	r24, 0x01	; 1
 5d4:	30 de       	rcall	.-928    	; 0x236 <LCD_String_xy>
 5d6:	8f ef       	ldi	r24, 0xFF	; 255
 5d8:	94 e3       	ldi	r25, 0x34	; 52
 5da:	2c e0       	ldi	r18, 0x0C	; 12
 5dc:	81 50       	subi	r24, 0x01	; 1
 5de:	90 40       	sbci	r25, 0x00	; 0
 5e0:	20 40       	sbci	r18, 0x00	; 0
 5e2:	e1 f7       	brne	.-8      	; 0x5dc <__stack+0x17d>
 5e4:	00 c0       	rjmp	.+0      	; 0x5e6 <__stack+0x187>
 5e6:	00 00       	nop
 5e8:	81 e0       	ldi	r24, 0x01	; 1
 5ea:	e8 1a       	sub	r14, r24
 5ec:	f1 08       	sbc	r15, r1
			else if (40>=TBAT) {
				PORTD |= (1<<7);
				LCD_String_xy(0,0,"BAT is charging");
				LCD_String_xy(1,0,"V:");
				LCD_String_xy(1,2,SVBAT);
				for (int Y=0;Y<56;Y++) {
 5ee:	19 f7       	brne	.-58     	; 0x5b6 <__stack+0x157>
					dtostrf(ABAT,5,2,SABAT);
					LCD_String_xy(1,10,"A:");
					LCD_String_xy(1,12,SABAT);
					_delay_ms(500);
				}
				PORTD &= ~(1<<7);
 5f0:	97 98       	cbi	0x12, 7	; 18
 5f2:	9f ef       	ldi	r25, 0xFF	; 255
 5f4:	23 ed       	ldi	r18, 0xD3	; 211
 5f6:	80 e3       	ldi	r24, 0x30	; 48
 5f8:	91 50       	subi	r25, 0x01	; 1
 5fa:	20 40       	sbci	r18, 0x00	; 0
 5fc:	80 40       	sbci	r24, 0x00	; 0
 5fe:	e1 f7       	brne	.-8      	; 0x5f8 <__stack+0x199>
 600:	00 c0       	rjmp	.+0      	; 0x602 <__stack+0x1a3>
 602:	00 00       	nop
				_delay_ms(2000);
				LCD_Clear();
 604:	31 de       	rcall	.-926    	; 0x268 <LCD_Clear>
 606:	e1 ce       	rjmp	.-574    	; 0x3ca <main+0x1c>
			}
		}
		else if (0.02<VBAT&&VBAT<8) {
 608:	2a e0       	ldi	r18, 0x0A	; 10
 60a:	37 ed       	ldi	r19, 0xD7	; 215
 60c:	43 ea       	ldi	r20, 0xA3	; 163
 60e:	5c e3       	ldi	r21, 0x3C	; 60
 610:	c7 01       	movw	r24, r14
 612:	b6 01       	movw	r22, r12
 614:	c8 d1       	rcall	.+912    	; 0x9a6 <__gesf2>
 616:	18 16       	cp	r1, r24
 618:	24 f5       	brge	.+72     	; 0x662 <__stack+0x203>
 61a:	20 e0       	ldi	r18, 0x00	; 0
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	40 e0       	ldi	r20, 0x00	; 0
 620:	51 e4       	ldi	r21, 0x41	; 65
 622:	c7 01       	movw	r24, r14
 624:	b6 01       	movw	r22, r12
 626:	a1 d0       	rcall	.+322    	; 0x76a <__cmpsf2>
 628:	88 23       	and	r24, r24
 62a:	dc f4       	brge	.+54     	; 0x662 <__stack+0x203>
			LCD_String_xy(0,0,"BAT is broken");
 62c:	41 ea       	ldi	r20, 0xA1	; 161
 62e:	50 e0       	ldi	r21, 0x00	; 0
 630:	60 e0       	ldi	r22, 0x00	; 0
 632:	80 e0       	ldi	r24, 0x00	; 0
 634:	00 de       	rcall	.-1024   	; 0x236 <LCD_String_xy>
			LCD_String_xy(1,0,"V:");
 636:	4c e6       	ldi	r20, 0x6C	; 108
 638:	50 e0       	ldi	r21, 0x00	; 0
 63a:	60 e0       	ldi	r22, 0x00	; 0
 63c:	81 e0       	ldi	r24, 0x01	; 1
 63e:	fb dd       	rcall	.-1034   	; 0x236 <LCD_String_xy>
			LCD_String_xy(1,2,SVBAT);
 640:	ae 01       	movw	r20, r28
 642:	4f 5f       	subi	r20, 0xFF	; 255
 644:	5f 4f       	sbci	r21, 0xFF	; 255
 646:	62 e0       	ldi	r22, 0x02	; 2
 648:	81 e0       	ldi	r24, 0x01	; 1
 64a:	f5 dd       	rcall	.-1046   	; 0x236 <LCD_String_xy>
 64c:	9f ef       	ldi	r25, 0xFF	; 255
 64e:	20 e7       	ldi	r18, 0x70	; 112
 650:	82 e0       	ldi	r24, 0x02	; 2
 652:	91 50       	subi	r25, 0x01	; 1
 654:	20 40       	sbci	r18, 0x00	; 0
 656:	80 40       	sbci	r24, 0x00	; 0
 658:	e1 f7       	brne	.-8      	; 0x652 <__stack+0x1f3>
 65a:	00 c0       	rjmp	.+0      	; 0x65c <__stack+0x1fd>
 65c:	00 00       	nop
			_delay_ms(100);
			LCD_Clear();
 65e:	04 de       	rcall	.-1016   	; 0x268 <LCD_Clear>
 660:	b4 ce       	rjmp	.-664    	; 0x3ca <main+0x1c>
		}
		else if (VBAT<=0.02) {
 662:	2a e0       	ldi	r18, 0x0A	; 10
 664:	37 ed       	ldi	r19, 0xD7	; 215
 666:	43 ea       	ldi	r20, 0xA3	; 163
 668:	5c e3       	ldi	r21, 0x3C	; 60
 66a:	c7 01       	movw	r24, r14
 66c:	b6 01       	movw	r22, r12
 66e:	7d d0       	rcall	.+250    	; 0x76a <__cmpsf2>
 670:	18 16       	cp	r1, r24
 672:	0c f4       	brge	.+2      	; 0x676 <__stack+0x217>
 674:	aa ce       	rjmp	.-684    	; 0x3ca <main+0x1c>
			LCD_String_xy(0,0,"BAT is");
 676:	4f ea       	ldi	r20, 0xAF	; 175
 678:	50 e0       	ldi	r21, 0x00	; 0
 67a:	60 e0       	ldi	r22, 0x00	; 0
 67c:	80 e0       	ldi	r24, 0x00	; 0
 67e:	db dd       	rcall	.-1098   	; 0x236 <LCD_String_xy>
			LCD_String_xy(1,0,"not connected");
 680:	46 eb       	ldi	r20, 0xB6	; 182
 682:	50 e0       	ldi	r21, 0x00	; 0
 684:	60 e0       	ldi	r22, 0x00	; 0
 686:	81 e0       	ldi	r24, 0x01	; 1
 688:	d6 dd       	rcall	.-1108   	; 0x236 <LCD_String_xy>
 68a:	9f ef       	ldi	r25, 0xFF	; 255
 68c:	20 e7       	ldi	r18, 0x70	; 112
 68e:	82 e0       	ldi	r24, 0x02	; 2
 690:	91 50       	subi	r25, 0x01	; 1
 692:	20 40       	sbci	r18, 0x00	; 0
 694:	80 40       	sbci	r24, 0x00	; 0
 696:	e1 f7       	brne	.-8      	; 0x690 <__stack+0x231>
 698:	00 c0       	rjmp	.+0      	; 0x69a <__stack+0x23b>
 69a:	00 00       	nop
			_delay_ms(100);
			LCD_Clear();
 69c:	e5 dd       	rcall	.-1078   	; 0x268 <LCD_Clear>
 69e:	95 ce       	rjmp	.-726    	; 0x3ca <main+0x1c>

000006a0 <__subsf3>:
 6a0:	50 58       	subi	r21, 0x80	; 128

000006a2 <__addsf3>:
 6a2:	bb 27       	eor	r27, r27
 6a4:	aa 27       	eor	r26, r26
 6a6:	0e d0       	rcall	.+28     	; 0x6c4 <__addsf3x>
 6a8:	44 c1       	rjmp	.+648    	; 0x932 <__fp_round>
 6aa:	35 d1       	rcall	.+618    	; 0x916 <__fp_pscA>
 6ac:	30 f0       	brcs	.+12     	; 0x6ba <__addsf3+0x18>
 6ae:	3a d1       	rcall	.+628    	; 0x924 <__fp_pscB>
 6b0:	20 f0       	brcs	.+8      	; 0x6ba <__addsf3+0x18>
 6b2:	31 f4       	brne	.+12     	; 0x6c0 <__addsf3+0x1e>
 6b4:	9f 3f       	cpi	r25, 0xFF	; 255
 6b6:	11 f4       	brne	.+4      	; 0x6bc <__addsf3+0x1a>
 6b8:	1e f4       	brtc	.+6      	; 0x6c0 <__addsf3+0x1e>
 6ba:	2a c1       	rjmp	.+596    	; 0x910 <__fp_nan>
 6bc:	0e f4       	brtc	.+2      	; 0x6c0 <__addsf3+0x1e>
 6be:	e0 95       	com	r30
 6c0:	e7 fb       	bst	r30, 7
 6c2:	20 c1       	rjmp	.+576    	; 0x904 <__fp_inf>

000006c4 <__addsf3x>:
 6c4:	e9 2f       	mov	r30, r25
 6c6:	46 d1       	rcall	.+652    	; 0x954 <__fp_split3>
 6c8:	80 f3       	brcs	.-32     	; 0x6aa <__addsf3+0x8>
 6ca:	ba 17       	cp	r27, r26
 6cc:	62 07       	cpc	r22, r18
 6ce:	73 07       	cpc	r23, r19
 6d0:	84 07       	cpc	r24, r20
 6d2:	95 07       	cpc	r25, r21
 6d4:	18 f0       	brcs	.+6      	; 0x6dc <__addsf3x+0x18>
 6d6:	71 f4       	brne	.+28     	; 0x6f4 <__addsf3x+0x30>
 6d8:	9e f5       	brtc	.+102    	; 0x740 <__addsf3x+0x7c>
 6da:	5e c1       	rjmp	.+700    	; 0x998 <__fp_zero>
 6dc:	0e f4       	brtc	.+2      	; 0x6e0 <__addsf3x+0x1c>
 6de:	e0 95       	com	r30
 6e0:	0b 2e       	mov	r0, r27
 6e2:	ba 2f       	mov	r27, r26
 6e4:	a0 2d       	mov	r26, r0
 6e6:	0b 01       	movw	r0, r22
 6e8:	b9 01       	movw	r22, r18
 6ea:	90 01       	movw	r18, r0
 6ec:	0c 01       	movw	r0, r24
 6ee:	ca 01       	movw	r24, r20
 6f0:	a0 01       	movw	r20, r0
 6f2:	11 24       	eor	r1, r1
 6f4:	ff 27       	eor	r31, r31
 6f6:	59 1b       	sub	r21, r25
 6f8:	99 f0       	breq	.+38     	; 0x720 <__addsf3x+0x5c>
 6fa:	59 3f       	cpi	r21, 0xF9	; 249
 6fc:	50 f4       	brcc	.+20     	; 0x712 <__addsf3x+0x4e>
 6fe:	50 3e       	cpi	r21, 0xE0	; 224
 700:	68 f1       	brcs	.+90     	; 0x75c <__addsf3x+0x98>
 702:	1a 16       	cp	r1, r26
 704:	f0 40       	sbci	r31, 0x00	; 0
 706:	a2 2f       	mov	r26, r18
 708:	23 2f       	mov	r18, r19
 70a:	34 2f       	mov	r19, r20
 70c:	44 27       	eor	r20, r20
 70e:	58 5f       	subi	r21, 0xF8	; 248
 710:	f3 cf       	rjmp	.-26     	; 0x6f8 <__addsf3x+0x34>
 712:	46 95       	lsr	r20
 714:	37 95       	ror	r19
 716:	27 95       	ror	r18
 718:	a7 95       	ror	r26
 71a:	f0 40       	sbci	r31, 0x00	; 0
 71c:	53 95       	inc	r21
 71e:	c9 f7       	brne	.-14     	; 0x712 <__addsf3x+0x4e>
 720:	7e f4       	brtc	.+30     	; 0x740 <__addsf3x+0x7c>
 722:	1f 16       	cp	r1, r31
 724:	ba 0b       	sbc	r27, r26
 726:	62 0b       	sbc	r22, r18
 728:	73 0b       	sbc	r23, r19
 72a:	84 0b       	sbc	r24, r20
 72c:	ba f0       	brmi	.+46     	; 0x75c <__addsf3x+0x98>
 72e:	91 50       	subi	r25, 0x01	; 1
 730:	a1 f0       	breq	.+40     	; 0x75a <__addsf3x+0x96>
 732:	ff 0f       	add	r31, r31
 734:	bb 1f       	adc	r27, r27
 736:	66 1f       	adc	r22, r22
 738:	77 1f       	adc	r23, r23
 73a:	88 1f       	adc	r24, r24
 73c:	c2 f7       	brpl	.-16     	; 0x72e <__addsf3x+0x6a>
 73e:	0e c0       	rjmp	.+28     	; 0x75c <__addsf3x+0x98>
 740:	ba 0f       	add	r27, r26
 742:	62 1f       	adc	r22, r18
 744:	73 1f       	adc	r23, r19
 746:	84 1f       	adc	r24, r20
 748:	48 f4       	brcc	.+18     	; 0x75c <__addsf3x+0x98>
 74a:	87 95       	ror	r24
 74c:	77 95       	ror	r23
 74e:	67 95       	ror	r22
 750:	b7 95       	ror	r27
 752:	f7 95       	ror	r31
 754:	9e 3f       	cpi	r25, 0xFE	; 254
 756:	08 f0       	brcs	.+2      	; 0x75a <__addsf3x+0x96>
 758:	b3 cf       	rjmp	.-154    	; 0x6c0 <__addsf3+0x1e>
 75a:	93 95       	inc	r25
 75c:	88 0f       	add	r24, r24
 75e:	08 f0       	brcs	.+2      	; 0x762 <__addsf3x+0x9e>
 760:	99 27       	eor	r25, r25
 762:	ee 0f       	add	r30, r30
 764:	97 95       	ror	r25
 766:	87 95       	ror	r24
 768:	08 95       	ret

0000076a <__cmpsf2>:
 76a:	a8 d0       	rcall	.+336    	; 0x8bc <__fp_cmp>
 76c:	08 f4       	brcc	.+2      	; 0x770 <__cmpsf2+0x6>
 76e:	81 e0       	ldi	r24, 0x01	; 1
 770:	08 95       	ret

00000772 <__divsf3>:
 772:	0c d0       	rcall	.+24     	; 0x78c <__divsf3x>
 774:	de c0       	rjmp	.+444    	; 0x932 <__fp_round>
 776:	d6 d0       	rcall	.+428    	; 0x924 <__fp_pscB>
 778:	40 f0       	brcs	.+16     	; 0x78a <__divsf3+0x18>
 77a:	cd d0       	rcall	.+410    	; 0x916 <__fp_pscA>
 77c:	30 f0       	brcs	.+12     	; 0x78a <__divsf3+0x18>
 77e:	21 f4       	brne	.+8      	; 0x788 <__divsf3+0x16>
 780:	5f 3f       	cpi	r21, 0xFF	; 255
 782:	19 f0       	breq	.+6      	; 0x78a <__divsf3+0x18>
 784:	bf c0       	rjmp	.+382    	; 0x904 <__fp_inf>
 786:	51 11       	cpse	r21, r1
 788:	08 c1       	rjmp	.+528    	; 0x99a <__fp_szero>
 78a:	c2 c0       	rjmp	.+388    	; 0x910 <__fp_nan>

0000078c <__divsf3x>:
 78c:	e3 d0       	rcall	.+454    	; 0x954 <__fp_split3>
 78e:	98 f3       	brcs	.-26     	; 0x776 <__divsf3+0x4>

00000790 <__divsf3_pse>:
 790:	99 23       	and	r25, r25
 792:	c9 f3       	breq	.-14     	; 0x786 <__divsf3+0x14>
 794:	55 23       	and	r21, r21
 796:	b1 f3       	breq	.-20     	; 0x784 <__divsf3+0x12>
 798:	95 1b       	sub	r25, r21
 79a:	55 0b       	sbc	r21, r21
 79c:	bb 27       	eor	r27, r27
 79e:	aa 27       	eor	r26, r26
 7a0:	62 17       	cp	r22, r18
 7a2:	73 07       	cpc	r23, r19
 7a4:	84 07       	cpc	r24, r20
 7a6:	38 f0       	brcs	.+14     	; 0x7b6 <__divsf3_pse+0x26>
 7a8:	9f 5f       	subi	r25, 0xFF	; 255
 7aa:	5f 4f       	sbci	r21, 0xFF	; 255
 7ac:	22 0f       	add	r18, r18
 7ae:	33 1f       	adc	r19, r19
 7b0:	44 1f       	adc	r20, r20
 7b2:	aa 1f       	adc	r26, r26
 7b4:	a9 f3       	breq	.-22     	; 0x7a0 <__divsf3_pse+0x10>
 7b6:	33 d0       	rcall	.+102    	; 0x81e <__divsf3_pse+0x8e>
 7b8:	0e 2e       	mov	r0, r30
 7ba:	3a f0       	brmi	.+14     	; 0x7ca <__divsf3_pse+0x3a>
 7bc:	e0 e8       	ldi	r30, 0x80	; 128
 7be:	30 d0       	rcall	.+96     	; 0x820 <__divsf3_pse+0x90>
 7c0:	91 50       	subi	r25, 0x01	; 1
 7c2:	50 40       	sbci	r21, 0x00	; 0
 7c4:	e6 95       	lsr	r30
 7c6:	00 1c       	adc	r0, r0
 7c8:	ca f7       	brpl	.-14     	; 0x7bc <__divsf3_pse+0x2c>
 7ca:	29 d0       	rcall	.+82     	; 0x81e <__divsf3_pse+0x8e>
 7cc:	fe 2f       	mov	r31, r30
 7ce:	27 d0       	rcall	.+78     	; 0x81e <__divsf3_pse+0x8e>
 7d0:	66 0f       	add	r22, r22
 7d2:	77 1f       	adc	r23, r23
 7d4:	88 1f       	adc	r24, r24
 7d6:	bb 1f       	adc	r27, r27
 7d8:	26 17       	cp	r18, r22
 7da:	37 07       	cpc	r19, r23
 7dc:	48 07       	cpc	r20, r24
 7de:	ab 07       	cpc	r26, r27
 7e0:	b0 e8       	ldi	r27, 0x80	; 128
 7e2:	09 f0       	breq	.+2      	; 0x7e6 <__divsf3_pse+0x56>
 7e4:	bb 0b       	sbc	r27, r27
 7e6:	80 2d       	mov	r24, r0
 7e8:	bf 01       	movw	r22, r30
 7ea:	ff 27       	eor	r31, r31
 7ec:	93 58       	subi	r25, 0x83	; 131
 7ee:	5f 4f       	sbci	r21, 0xFF	; 255
 7f0:	2a f0       	brmi	.+10     	; 0x7fc <__divsf3_pse+0x6c>
 7f2:	9e 3f       	cpi	r25, 0xFE	; 254
 7f4:	51 05       	cpc	r21, r1
 7f6:	68 f0       	brcs	.+26     	; 0x812 <__divsf3_pse+0x82>
 7f8:	85 c0       	rjmp	.+266    	; 0x904 <__fp_inf>
 7fa:	cf c0       	rjmp	.+414    	; 0x99a <__fp_szero>
 7fc:	5f 3f       	cpi	r21, 0xFF	; 255
 7fe:	ec f3       	brlt	.-6      	; 0x7fa <__divsf3_pse+0x6a>
 800:	98 3e       	cpi	r25, 0xE8	; 232
 802:	dc f3       	brlt	.-10     	; 0x7fa <__divsf3_pse+0x6a>
 804:	86 95       	lsr	r24
 806:	77 95       	ror	r23
 808:	67 95       	ror	r22
 80a:	b7 95       	ror	r27
 80c:	f7 95       	ror	r31
 80e:	9f 5f       	subi	r25, 0xFF	; 255
 810:	c9 f7       	brne	.-14     	; 0x804 <__divsf3_pse+0x74>
 812:	88 0f       	add	r24, r24
 814:	91 1d       	adc	r25, r1
 816:	96 95       	lsr	r25
 818:	87 95       	ror	r24
 81a:	97 f9       	bld	r25, 7
 81c:	08 95       	ret
 81e:	e1 e0       	ldi	r30, 0x01	; 1
 820:	66 0f       	add	r22, r22
 822:	77 1f       	adc	r23, r23
 824:	88 1f       	adc	r24, r24
 826:	bb 1f       	adc	r27, r27
 828:	62 17       	cp	r22, r18
 82a:	73 07       	cpc	r23, r19
 82c:	84 07       	cpc	r24, r20
 82e:	ba 07       	cpc	r27, r26
 830:	20 f0       	brcs	.+8      	; 0x83a <__divsf3_pse+0xaa>
 832:	62 1b       	sub	r22, r18
 834:	73 0b       	sbc	r23, r19
 836:	84 0b       	sbc	r24, r20
 838:	ba 0b       	sbc	r27, r26
 83a:	ee 1f       	adc	r30, r30
 83c:	88 f7       	brcc	.-30     	; 0x820 <__divsf3_pse+0x90>
 83e:	e0 95       	com	r30
 840:	08 95       	ret

00000842 <__floatunsisf>:
 842:	e8 94       	clt
 844:	09 c0       	rjmp	.+18     	; 0x858 <__floatsisf+0x12>

00000846 <__floatsisf>:
 846:	97 fb       	bst	r25, 7
 848:	3e f4       	brtc	.+14     	; 0x858 <__floatsisf+0x12>
 84a:	90 95       	com	r25
 84c:	80 95       	com	r24
 84e:	70 95       	com	r23
 850:	61 95       	neg	r22
 852:	7f 4f       	sbci	r23, 0xFF	; 255
 854:	8f 4f       	sbci	r24, 0xFF	; 255
 856:	9f 4f       	sbci	r25, 0xFF	; 255
 858:	99 23       	and	r25, r25
 85a:	a9 f0       	breq	.+42     	; 0x886 <__floatsisf+0x40>
 85c:	f9 2f       	mov	r31, r25
 85e:	96 e9       	ldi	r25, 0x96	; 150
 860:	bb 27       	eor	r27, r27
 862:	93 95       	inc	r25
 864:	f6 95       	lsr	r31
 866:	87 95       	ror	r24
 868:	77 95       	ror	r23
 86a:	67 95       	ror	r22
 86c:	b7 95       	ror	r27
 86e:	f1 11       	cpse	r31, r1
 870:	f8 cf       	rjmp	.-16     	; 0x862 <__floatsisf+0x1c>
 872:	fa f4       	brpl	.+62     	; 0x8b2 <__floatsisf+0x6c>
 874:	bb 0f       	add	r27, r27
 876:	11 f4       	brne	.+4      	; 0x87c <__floatsisf+0x36>
 878:	60 ff       	sbrs	r22, 0
 87a:	1b c0       	rjmp	.+54     	; 0x8b2 <__floatsisf+0x6c>
 87c:	6f 5f       	subi	r22, 0xFF	; 255
 87e:	7f 4f       	sbci	r23, 0xFF	; 255
 880:	8f 4f       	sbci	r24, 0xFF	; 255
 882:	9f 4f       	sbci	r25, 0xFF	; 255
 884:	16 c0       	rjmp	.+44     	; 0x8b2 <__floatsisf+0x6c>
 886:	88 23       	and	r24, r24
 888:	11 f0       	breq	.+4      	; 0x88e <__floatsisf+0x48>
 88a:	96 e9       	ldi	r25, 0x96	; 150
 88c:	11 c0       	rjmp	.+34     	; 0x8b0 <__floatsisf+0x6a>
 88e:	77 23       	and	r23, r23
 890:	21 f0       	breq	.+8      	; 0x89a <__floatsisf+0x54>
 892:	9e e8       	ldi	r25, 0x8E	; 142
 894:	87 2f       	mov	r24, r23
 896:	76 2f       	mov	r23, r22
 898:	05 c0       	rjmp	.+10     	; 0x8a4 <__floatsisf+0x5e>
 89a:	66 23       	and	r22, r22
 89c:	71 f0       	breq	.+28     	; 0x8ba <__floatsisf+0x74>
 89e:	96 e8       	ldi	r25, 0x86	; 134
 8a0:	86 2f       	mov	r24, r22
 8a2:	70 e0       	ldi	r23, 0x00	; 0
 8a4:	60 e0       	ldi	r22, 0x00	; 0
 8a6:	2a f0       	brmi	.+10     	; 0x8b2 <__floatsisf+0x6c>
 8a8:	9a 95       	dec	r25
 8aa:	66 0f       	add	r22, r22
 8ac:	77 1f       	adc	r23, r23
 8ae:	88 1f       	adc	r24, r24
 8b0:	da f7       	brpl	.-10     	; 0x8a8 <__floatsisf+0x62>
 8b2:	88 0f       	add	r24, r24
 8b4:	96 95       	lsr	r25
 8b6:	87 95       	ror	r24
 8b8:	97 f9       	bld	r25, 7
 8ba:	08 95       	ret

000008bc <__fp_cmp>:
 8bc:	99 0f       	add	r25, r25
 8be:	00 08       	sbc	r0, r0
 8c0:	55 0f       	add	r21, r21
 8c2:	aa 0b       	sbc	r26, r26
 8c4:	e0 e8       	ldi	r30, 0x80	; 128
 8c6:	fe ef       	ldi	r31, 0xFE	; 254
 8c8:	16 16       	cp	r1, r22
 8ca:	17 06       	cpc	r1, r23
 8cc:	e8 07       	cpc	r30, r24
 8ce:	f9 07       	cpc	r31, r25
 8d0:	c0 f0       	brcs	.+48     	; 0x902 <__fp_cmp+0x46>
 8d2:	12 16       	cp	r1, r18
 8d4:	13 06       	cpc	r1, r19
 8d6:	e4 07       	cpc	r30, r20
 8d8:	f5 07       	cpc	r31, r21
 8da:	98 f0       	brcs	.+38     	; 0x902 <__fp_cmp+0x46>
 8dc:	62 1b       	sub	r22, r18
 8de:	73 0b       	sbc	r23, r19
 8e0:	84 0b       	sbc	r24, r20
 8e2:	95 0b       	sbc	r25, r21
 8e4:	39 f4       	brne	.+14     	; 0x8f4 <__fp_cmp+0x38>
 8e6:	0a 26       	eor	r0, r26
 8e8:	61 f0       	breq	.+24     	; 0x902 <__fp_cmp+0x46>
 8ea:	23 2b       	or	r18, r19
 8ec:	24 2b       	or	r18, r20
 8ee:	25 2b       	or	r18, r21
 8f0:	21 f4       	brne	.+8      	; 0x8fa <__fp_cmp+0x3e>
 8f2:	08 95       	ret
 8f4:	0a 26       	eor	r0, r26
 8f6:	09 f4       	brne	.+2      	; 0x8fa <__fp_cmp+0x3e>
 8f8:	a1 40       	sbci	r26, 0x01	; 1
 8fa:	a6 95       	lsr	r26
 8fc:	8f ef       	ldi	r24, 0xFF	; 255
 8fe:	81 1d       	adc	r24, r1
 900:	81 1d       	adc	r24, r1
 902:	08 95       	ret

00000904 <__fp_inf>:
 904:	97 f9       	bld	r25, 7
 906:	9f 67       	ori	r25, 0x7F	; 127
 908:	80 e8       	ldi	r24, 0x80	; 128
 90a:	70 e0       	ldi	r23, 0x00	; 0
 90c:	60 e0       	ldi	r22, 0x00	; 0
 90e:	08 95       	ret

00000910 <__fp_nan>:
 910:	9f ef       	ldi	r25, 0xFF	; 255
 912:	80 ec       	ldi	r24, 0xC0	; 192
 914:	08 95       	ret

00000916 <__fp_pscA>:
 916:	00 24       	eor	r0, r0
 918:	0a 94       	dec	r0
 91a:	16 16       	cp	r1, r22
 91c:	17 06       	cpc	r1, r23
 91e:	18 06       	cpc	r1, r24
 920:	09 06       	cpc	r0, r25
 922:	08 95       	ret

00000924 <__fp_pscB>:
 924:	00 24       	eor	r0, r0
 926:	0a 94       	dec	r0
 928:	12 16       	cp	r1, r18
 92a:	13 06       	cpc	r1, r19
 92c:	14 06       	cpc	r1, r20
 92e:	05 06       	cpc	r0, r21
 930:	08 95       	ret

00000932 <__fp_round>:
 932:	09 2e       	mov	r0, r25
 934:	03 94       	inc	r0
 936:	00 0c       	add	r0, r0
 938:	11 f4       	brne	.+4      	; 0x93e <__fp_round+0xc>
 93a:	88 23       	and	r24, r24
 93c:	52 f0       	brmi	.+20     	; 0x952 <__fp_round+0x20>
 93e:	bb 0f       	add	r27, r27
 940:	40 f4       	brcc	.+16     	; 0x952 <__fp_round+0x20>
 942:	bf 2b       	or	r27, r31
 944:	11 f4       	brne	.+4      	; 0x94a <__fp_round+0x18>
 946:	60 ff       	sbrs	r22, 0
 948:	04 c0       	rjmp	.+8      	; 0x952 <__fp_round+0x20>
 94a:	6f 5f       	subi	r22, 0xFF	; 255
 94c:	7f 4f       	sbci	r23, 0xFF	; 255
 94e:	8f 4f       	sbci	r24, 0xFF	; 255
 950:	9f 4f       	sbci	r25, 0xFF	; 255
 952:	08 95       	ret

00000954 <__fp_split3>:
 954:	57 fd       	sbrc	r21, 7
 956:	90 58       	subi	r25, 0x80	; 128
 958:	44 0f       	add	r20, r20
 95a:	55 1f       	adc	r21, r21
 95c:	59 f0       	breq	.+22     	; 0x974 <__fp_splitA+0x10>
 95e:	5f 3f       	cpi	r21, 0xFF	; 255
 960:	71 f0       	breq	.+28     	; 0x97e <__fp_splitA+0x1a>
 962:	47 95       	ror	r20

00000964 <__fp_splitA>:
 964:	88 0f       	add	r24, r24
 966:	97 fb       	bst	r25, 7
 968:	99 1f       	adc	r25, r25
 96a:	61 f0       	breq	.+24     	; 0x984 <__fp_splitA+0x20>
 96c:	9f 3f       	cpi	r25, 0xFF	; 255
 96e:	79 f0       	breq	.+30     	; 0x98e <__fp_splitA+0x2a>
 970:	87 95       	ror	r24
 972:	08 95       	ret
 974:	12 16       	cp	r1, r18
 976:	13 06       	cpc	r1, r19
 978:	14 06       	cpc	r1, r20
 97a:	55 1f       	adc	r21, r21
 97c:	f2 cf       	rjmp	.-28     	; 0x962 <__fp_split3+0xe>
 97e:	46 95       	lsr	r20
 980:	f1 df       	rcall	.-30     	; 0x964 <__fp_splitA>
 982:	08 c0       	rjmp	.+16     	; 0x994 <__fp_splitA+0x30>
 984:	16 16       	cp	r1, r22
 986:	17 06       	cpc	r1, r23
 988:	18 06       	cpc	r1, r24
 98a:	99 1f       	adc	r25, r25
 98c:	f1 cf       	rjmp	.-30     	; 0x970 <__fp_splitA+0xc>
 98e:	86 95       	lsr	r24
 990:	71 05       	cpc	r23, r1
 992:	61 05       	cpc	r22, r1
 994:	08 94       	sec
 996:	08 95       	ret

00000998 <__fp_zero>:
 998:	e8 94       	clt

0000099a <__fp_szero>:
 99a:	bb 27       	eor	r27, r27
 99c:	66 27       	eor	r22, r22
 99e:	77 27       	eor	r23, r23
 9a0:	cb 01       	movw	r24, r22
 9a2:	97 f9       	bld	r25, 7
 9a4:	08 95       	ret

000009a6 <__gesf2>:
 9a6:	8a df       	rcall	.-236    	; 0x8bc <__fp_cmp>
 9a8:	08 f4       	brcc	.+2      	; 0x9ac <__gesf2+0x6>
 9aa:	8f ef       	ldi	r24, 0xFF	; 255
 9ac:	08 95       	ret

000009ae <__mulsf3>:
 9ae:	0b d0       	rcall	.+22     	; 0x9c6 <__mulsf3x>
 9b0:	c0 cf       	rjmp	.-128    	; 0x932 <__fp_round>
 9b2:	b1 df       	rcall	.-158    	; 0x916 <__fp_pscA>
 9b4:	28 f0       	brcs	.+10     	; 0x9c0 <__mulsf3+0x12>
 9b6:	b6 df       	rcall	.-148    	; 0x924 <__fp_pscB>
 9b8:	18 f0       	brcs	.+6      	; 0x9c0 <__mulsf3+0x12>
 9ba:	95 23       	and	r25, r21
 9bc:	09 f0       	breq	.+2      	; 0x9c0 <__mulsf3+0x12>
 9be:	a2 cf       	rjmp	.-188    	; 0x904 <__fp_inf>
 9c0:	a7 cf       	rjmp	.-178    	; 0x910 <__fp_nan>
 9c2:	11 24       	eor	r1, r1
 9c4:	ea cf       	rjmp	.-44     	; 0x99a <__fp_szero>

000009c6 <__mulsf3x>:
 9c6:	c6 df       	rcall	.-116    	; 0x954 <__fp_split3>
 9c8:	a0 f3       	brcs	.-24     	; 0x9b2 <__mulsf3+0x4>

000009ca <__mulsf3_pse>:
 9ca:	95 9f       	mul	r25, r21
 9cc:	d1 f3       	breq	.-12     	; 0x9c2 <__mulsf3+0x14>
 9ce:	95 0f       	add	r25, r21
 9d0:	50 e0       	ldi	r21, 0x00	; 0
 9d2:	55 1f       	adc	r21, r21
 9d4:	62 9f       	mul	r22, r18
 9d6:	f0 01       	movw	r30, r0
 9d8:	72 9f       	mul	r23, r18
 9da:	bb 27       	eor	r27, r27
 9dc:	f0 0d       	add	r31, r0
 9de:	b1 1d       	adc	r27, r1
 9e0:	63 9f       	mul	r22, r19
 9e2:	aa 27       	eor	r26, r26
 9e4:	f0 0d       	add	r31, r0
 9e6:	b1 1d       	adc	r27, r1
 9e8:	aa 1f       	adc	r26, r26
 9ea:	64 9f       	mul	r22, r20
 9ec:	66 27       	eor	r22, r22
 9ee:	b0 0d       	add	r27, r0
 9f0:	a1 1d       	adc	r26, r1
 9f2:	66 1f       	adc	r22, r22
 9f4:	82 9f       	mul	r24, r18
 9f6:	22 27       	eor	r18, r18
 9f8:	b0 0d       	add	r27, r0
 9fa:	a1 1d       	adc	r26, r1
 9fc:	62 1f       	adc	r22, r18
 9fe:	73 9f       	mul	r23, r19
 a00:	b0 0d       	add	r27, r0
 a02:	a1 1d       	adc	r26, r1
 a04:	62 1f       	adc	r22, r18
 a06:	83 9f       	mul	r24, r19
 a08:	a0 0d       	add	r26, r0
 a0a:	61 1d       	adc	r22, r1
 a0c:	22 1f       	adc	r18, r18
 a0e:	74 9f       	mul	r23, r20
 a10:	33 27       	eor	r19, r19
 a12:	a0 0d       	add	r26, r0
 a14:	61 1d       	adc	r22, r1
 a16:	23 1f       	adc	r18, r19
 a18:	84 9f       	mul	r24, r20
 a1a:	60 0d       	add	r22, r0
 a1c:	21 1d       	adc	r18, r1
 a1e:	82 2f       	mov	r24, r18
 a20:	76 2f       	mov	r23, r22
 a22:	6a 2f       	mov	r22, r26
 a24:	11 24       	eor	r1, r1
 a26:	9f 57       	subi	r25, 0x7F	; 127
 a28:	50 40       	sbci	r21, 0x00	; 0
 a2a:	8a f0       	brmi	.+34     	; 0xa4e <__mulsf3_pse+0x84>
 a2c:	e1 f0       	breq	.+56     	; 0xa66 <__mulsf3_pse+0x9c>
 a2e:	88 23       	and	r24, r24
 a30:	4a f0       	brmi	.+18     	; 0xa44 <__mulsf3_pse+0x7a>
 a32:	ee 0f       	add	r30, r30
 a34:	ff 1f       	adc	r31, r31
 a36:	bb 1f       	adc	r27, r27
 a38:	66 1f       	adc	r22, r22
 a3a:	77 1f       	adc	r23, r23
 a3c:	88 1f       	adc	r24, r24
 a3e:	91 50       	subi	r25, 0x01	; 1
 a40:	50 40       	sbci	r21, 0x00	; 0
 a42:	a9 f7       	brne	.-22     	; 0xa2e <__mulsf3_pse+0x64>
 a44:	9e 3f       	cpi	r25, 0xFE	; 254
 a46:	51 05       	cpc	r21, r1
 a48:	70 f0       	brcs	.+28     	; 0xa66 <__mulsf3_pse+0x9c>
 a4a:	5c cf       	rjmp	.-328    	; 0x904 <__fp_inf>
 a4c:	a6 cf       	rjmp	.-180    	; 0x99a <__fp_szero>
 a4e:	5f 3f       	cpi	r21, 0xFF	; 255
 a50:	ec f3       	brlt	.-6      	; 0xa4c <__mulsf3_pse+0x82>
 a52:	98 3e       	cpi	r25, 0xE8	; 232
 a54:	dc f3       	brlt	.-10     	; 0xa4c <__mulsf3_pse+0x82>
 a56:	86 95       	lsr	r24
 a58:	77 95       	ror	r23
 a5a:	67 95       	ror	r22
 a5c:	b7 95       	ror	r27
 a5e:	f7 95       	ror	r31
 a60:	e7 95       	ror	r30
 a62:	9f 5f       	subi	r25, 0xFF	; 255
 a64:	c1 f7       	brne	.-16     	; 0xa56 <__mulsf3_pse+0x8c>
 a66:	fe 2b       	or	r31, r30
 a68:	88 0f       	add	r24, r24
 a6a:	91 1d       	adc	r25, r1
 a6c:	96 95       	lsr	r25
 a6e:	87 95       	ror	r24
 a70:	97 f9       	bld	r25, 7
 a72:	08 95       	ret

00000a74 <dtostrf>:
 a74:	ef 92       	push	r14
 a76:	0f 93       	push	r16
 a78:	1f 93       	push	r17
 a7a:	cf 93       	push	r28
 a7c:	df 93       	push	r29
 a7e:	e8 01       	movw	r28, r16
 a80:	47 fd       	sbrc	r20, 7
 a82:	02 c0       	rjmp	.+4      	; 0xa88 <dtostrf+0x14>
 a84:	34 e0       	ldi	r19, 0x04	; 4
 a86:	01 c0       	rjmp	.+2      	; 0xa8a <dtostrf+0x16>
 a88:	34 e1       	ldi	r19, 0x14	; 20
 a8a:	04 2e       	mov	r0, r20
 a8c:	00 0c       	add	r0, r0
 a8e:	55 0b       	sbc	r21, r21
 a90:	57 ff       	sbrs	r21, 7
 a92:	03 c0       	rjmp	.+6      	; 0xa9a <dtostrf+0x26>
 a94:	51 95       	neg	r21
 a96:	41 95       	neg	r20
 a98:	51 09       	sbc	r21, r1
 a9a:	e3 2e       	mov	r14, r19
 a9c:	02 2f       	mov	r16, r18
 a9e:	24 2f       	mov	r18, r20
 aa0:	ae 01       	movw	r20, r28
 aa2:	07 d0       	rcall	.+14     	; 0xab2 <dtoa_prf>
 aa4:	ce 01       	movw	r24, r28
 aa6:	df 91       	pop	r29
 aa8:	cf 91       	pop	r28
 aaa:	1f 91       	pop	r17
 aac:	0f 91       	pop	r16
 aae:	ef 90       	pop	r14
 ab0:	08 95       	ret

00000ab2 <dtoa_prf>:
 ab2:	a9 e0       	ldi	r26, 0x09	; 9
 ab4:	b0 e0       	ldi	r27, 0x00	; 0
 ab6:	ee e5       	ldi	r30, 0x5E	; 94
 ab8:	f5 e0       	ldi	r31, 0x05	; 5
 aba:	30 c2       	rjmp	.+1120   	; 0xf1c <__prologue_saves__+0xc>
 abc:	6a 01       	movw	r12, r20
 abe:	12 2f       	mov	r17, r18
 ac0:	b0 2e       	mov	r11, r16
 ac2:	2b e3       	ldi	r18, 0x3B	; 59
 ac4:	20 17       	cp	r18, r16
 ac6:	20 f0       	brcs	.+8      	; 0xad0 <dtoa_prf+0x1e>
 ac8:	ff 24       	eor	r15, r15
 aca:	f3 94       	inc	r15
 acc:	f0 0e       	add	r15, r16
 ace:	02 c0       	rjmp	.+4      	; 0xad4 <dtoa_prf+0x22>
 ad0:	2c e3       	ldi	r18, 0x3C	; 60
 ad2:	f2 2e       	mov	r15, r18
 ad4:	0f 2d       	mov	r16, r15
 ad6:	27 e0       	ldi	r18, 0x07	; 7
 ad8:	ae 01       	movw	r20, r28
 ada:	4f 5f       	subi	r20, 0xFF	; 255
 adc:	5f 4f       	sbci	r21, 0xFF	; 255
 ade:	40 d1       	rcall	.+640    	; 0xd60 <__ftoa_engine>
 ae0:	bc 01       	movw	r22, r24
 ae2:	49 81       	ldd	r20, Y+1	; 0x01
 ae4:	84 2f       	mov	r24, r20
 ae6:	89 70       	andi	r24, 0x09	; 9
 ae8:	81 30       	cpi	r24, 0x01	; 1
 aea:	31 f0       	breq	.+12     	; 0xaf8 <dtoa_prf+0x46>
 aec:	e1 fc       	sbrc	r14, 1
 aee:	06 c0       	rjmp	.+12     	; 0xafc <dtoa_prf+0x4a>
 af0:	e0 fe       	sbrs	r14, 0
 af2:	06 c0       	rjmp	.+12     	; 0xb00 <dtoa_prf+0x4e>
 af4:	90 e2       	ldi	r25, 0x20	; 32
 af6:	05 c0       	rjmp	.+10     	; 0xb02 <dtoa_prf+0x50>
 af8:	9d e2       	ldi	r25, 0x2D	; 45
 afa:	03 c0       	rjmp	.+6      	; 0xb02 <dtoa_prf+0x50>
 afc:	9b e2       	ldi	r25, 0x2B	; 43
 afe:	01 c0       	rjmp	.+2      	; 0xb02 <dtoa_prf+0x50>
 b00:	90 e0       	ldi	r25, 0x00	; 0
 b02:	5e 2d       	mov	r21, r14
 b04:	50 71       	andi	r21, 0x10	; 16
 b06:	43 ff       	sbrs	r20, 3
 b08:	3c c0       	rjmp	.+120    	; 0xb82 <dtoa_prf+0xd0>
 b0a:	91 11       	cpse	r25, r1
 b0c:	02 c0       	rjmp	.+4      	; 0xb12 <dtoa_prf+0x60>
 b0e:	83 e0       	ldi	r24, 0x03	; 3
 b10:	01 c0       	rjmp	.+2      	; 0xb14 <dtoa_prf+0x62>
 b12:	84 e0       	ldi	r24, 0x04	; 4
 b14:	81 17       	cp	r24, r17
 b16:	18 f4       	brcc	.+6      	; 0xb1e <dtoa_prf+0x6c>
 b18:	21 2f       	mov	r18, r17
 b1a:	28 1b       	sub	r18, r24
 b1c:	01 c0       	rjmp	.+2      	; 0xb20 <dtoa_prf+0x6e>
 b1e:	20 e0       	ldi	r18, 0x00	; 0
 b20:	51 11       	cpse	r21, r1
 b22:	0b c0       	rjmp	.+22     	; 0xb3a <dtoa_prf+0x88>
 b24:	f6 01       	movw	r30, r12
 b26:	82 2f       	mov	r24, r18
 b28:	30 e2       	ldi	r19, 0x20	; 32
 b2a:	88 23       	and	r24, r24
 b2c:	19 f0       	breq	.+6      	; 0xb34 <dtoa_prf+0x82>
 b2e:	31 93       	st	Z+, r19
 b30:	81 50       	subi	r24, 0x01	; 1
 b32:	fb cf       	rjmp	.-10     	; 0xb2a <dtoa_prf+0x78>
 b34:	c2 0e       	add	r12, r18
 b36:	d1 1c       	adc	r13, r1
 b38:	20 e0       	ldi	r18, 0x00	; 0
 b3a:	99 23       	and	r25, r25
 b3c:	29 f0       	breq	.+10     	; 0xb48 <dtoa_prf+0x96>
 b3e:	d6 01       	movw	r26, r12
 b40:	9c 93       	st	X, r25
 b42:	f6 01       	movw	r30, r12
 b44:	31 96       	adiw	r30, 0x01	; 1
 b46:	6f 01       	movw	r12, r30
 b48:	c6 01       	movw	r24, r12
 b4a:	03 96       	adiw	r24, 0x03	; 3
 b4c:	e2 fe       	sbrs	r14, 2
 b4e:	0a c0       	rjmp	.+20     	; 0xb64 <dtoa_prf+0xb2>
 b50:	3e e4       	ldi	r19, 0x4E	; 78
 b52:	d6 01       	movw	r26, r12
 b54:	3c 93       	st	X, r19
 b56:	41 e4       	ldi	r20, 0x41	; 65
 b58:	11 96       	adiw	r26, 0x01	; 1
 b5a:	4c 93       	st	X, r20
 b5c:	11 97       	sbiw	r26, 0x01	; 1
 b5e:	12 96       	adiw	r26, 0x02	; 2
 b60:	3c 93       	st	X, r19
 b62:	06 c0       	rjmp	.+12     	; 0xb70 <dtoa_prf+0xbe>
 b64:	3e e6       	ldi	r19, 0x6E	; 110
 b66:	f6 01       	movw	r30, r12
 b68:	30 83       	st	Z, r19
 b6a:	41 e6       	ldi	r20, 0x61	; 97
 b6c:	41 83       	std	Z+1, r20	; 0x01
 b6e:	32 83       	std	Z+2, r19	; 0x02
 b70:	fc 01       	movw	r30, r24
 b72:	32 2f       	mov	r19, r18
 b74:	40 e2       	ldi	r20, 0x20	; 32
 b76:	33 23       	and	r19, r19
 b78:	09 f4       	brne	.+2      	; 0xb7c <dtoa_prf+0xca>
 b7a:	42 c0       	rjmp	.+132    	; 0xc00 <dtoa_prf+0x14e>
 b7c:	41 93       	st	Z+, r20
 b7e:	31 50       	subi	r19, 0x01	; 1
 b80:	fa cf       	rjmp	.-12     	; 0xb76 <dtoa_prf+0xc4>
 b82:	42 ff       	sbrs	r20, 2
 b84:	44 c0       	rjmp	.+136    	; 0xc0e <dtoa_prf+0x15c>
 b86:	91 11       	cpse	r25, r1
 b88:	02 c0       	rjmp	.+4      	; 0xb8e <dtoa_prf+0xdc>
 b8a:	83 e0       	ldi	r24, 0x03	; 3
 b8c:	01 c0       	rjmp	.+2      	; 0xb90 <dtoa_prf+0xde>
 b8e:	84 e0       	ldi	r24, 0x04	; 4
 b90:	81 17       	cp	r24, r17
 b92:	18 f4       	brcc	.+6      	; 0xb9a <dtoa_prf+0xe8>
 b94:	21 2f       	mov	r18, r17
 b96:	28 1b       	sub	r18, r24
 b98:	01 c0       	rjmp	.+2      	; 0xb9c <dtoa_prf+0xea>
 b9a:	20 e0       	ldi	r18, 0x00	; 0
 b9c:	51 11       	cpse	r21, r1
 b9e:	0b c0       	rjmp	.+22     	; 0xbb6 <dtoa_prf+0x104>
 ba0:	f6 01       	movw	r30, r12
 ba2:	82 2f       	mov	r24, r18
 ba4:	30 e2       	ldi	r19, 0x20	; 32
 ba6:	88 23       	and	r24, r24
 ba8:	19 f0       	breq	.+6      	; 0xbb0 <dtoa_prf+0xfe>
 baa:	31 93       	st	Z+, r19
 bac:	81 50       	subi	r24, 0x01	; 1
 bae:	fb cf       	rjmp	.-10     	; 0xba6 <dtoa_prf+0xf4>
 bb0:	c2 0e       	add	r12, r18
 bb2:	d1 1c       	adc	r13, r1
 bb4:	20 e0       	ldi	r18, 0x00	; 0
 bb6:	99 23       	and	r25, r25
 bb8:	29 f0       	breq	.+10     	; 0xbc4 <dtoa_prf+0x112>
 bba:	d6 01       	movw	r26, r12
 bbc:	9c 93       	st	X, r25
 bbe:	f6 01       	movw	r30, r12
 bc0:	31 96       	adiw	r30, 0x01	; 1
 bc2:	6f 01       	movw	r12, r30
 bc4:	c6 01       	movw	r24, r12
 bc6:	03 96       	adiw	r24, 0x03	; 3
 bc8:	e2 fe       	sbrs	r14, 2
 bca:	0b c0       	rjmp	.+22     	; 0xbe2 <dtoa_prf+0x130>
 bcc:	39 e4       	ldi	r19, 0x49	; 73
 bce:	d6 01       	movw	r26, r12
 bd0:	3c 93       	st	X, r19
 bd2:	3e e4       	ldi	r19, 0x4E	; 78
 bd4:	11 96       	adiw	r26, 0x01	; 1
 bd6:	3c 93       	st	X, r19
 bd8:	11 97       	sbiw	r26, 0x01	; 1
 bda:	36 e4       	ldi	r19, 0x46	; 70
 bdc:	12 96       	adiw	r26, 0x02	; 2
 bde:	3c 93       	st	X, r19
 be0:	07 c0       	rjmp	.+14     	; 0xbf0 <dtoa_prf+0x13e>
 be2:	39 e6       	ldi	r19, 0x69	; 105
 be4:	f6 01       	movw	r30, r12
 be6:	30 83       	st	Z, r19
 be8:	3e e6       	ldi	r19, 0x6E	; 110
 bea:	31 83       	std	Z+1, r19	; 0x01
 bec:	36 e6       	ldi	r19, 0x66	; 102
 bee:	32 83       	std	Z+2, r19	; 0x02
 bf0:	fc 01       	movw	r30, r24
 bf2:	32 2f       	mov	r19, r18
 bf4:	40 e2       	ldi	r20, 0x20	; 32
 bf6:	33 23       	and	r19, r19
 bf8:	19 f0       	breq	.+6      	; 0xc00 <dtoa_prf+0x14e>
 bfa:	41 93       	st	Z+, r20
 bfc:	31 50       	subi	r19, 0x01	; 1
 bfe:	fb cf       	rjmp	.-10     	; 0xbf6 <dtoa_prf+0x144>
 c00:	fc 01       	movw	r30, r24
 c02:	e2 0f       	add	r30, r18
 c04:	f1 1d       	adc	r31, r1
 c06:	10 82       	st	Z, r1
 c08:	8e ef       	ldi	r24, 0xFE	; 254
 c0a:	9f ef       	ldi	r25, 0xFF	; 255
 c0c:	a6 c0       	rjmp	.+332    	; 0xd5a <dtoa_prf+0x2a8>
 c0e:	21 e0       	ldi	r18, 0x01	; 1
 c10:	30 e0       	ldi	r19, 0x00	; 0
 c12:	91 11       	cpse	r25, r1
 c14:	02 c0       	rjmp	.+4      	; 0xc1a <dtoa_prf+0x168>
 c16:	20 e0       	ldi	r18, 0x00	; 0
 c18:	30 e0       	ldi	r19, 0x00	; 0
 c1a:	16 16       	cp	r1, r22
 c1c:	17 06       	cpc	r1, r23
 c1e:	1c f4       	brge	.+6      	; 0xc26 <dtoa_prf+0x174>
 c20:	fb 01       	movw	r30, r22
 c22:	31 96       	adiw	r30, 0x01	; 1
 c24:	02 c0       	rjmp	.+4      	; 0xc2a <dtoa_prf+0x178>
 c26:	e1 e0       	ldi	r30, 0x01	; 1
 c28:	f0 e0       	ldi	r31, 0x00	; 0
 c2a:	2e 0f       	add	r18, r30
 c2c:	3f 1f       	adc	r19, r31
 c2e:	bb 20       	and	r11, r11
 c30:	21 f0       	breq	.+8      	; 0xc3a <dtoa_prf+0x188>
 c32:	eb 2d       	mov	r30, r11
 c34:	f0 e0       	ldi	r31, 0x00	; 0
 c36:	31 96       	adiw	r30, 0x01	; 1
 c38:	02 c0       	rjmp	.+4      	; 0xc3e <dtoa_prf+0x18c>
 c3a:	e0 e0       	ldi	r30, 0x00	; 0
 c3c:	f0 e0       	ldi	r31, 0x00	; 0
 c3e:	2e 0f       	add	r18, r30
 c40:	3f 1f       	adc	r19, r31
 c42:	e1 2f       	mov	r30, r17
 c44:	f0 e0       	ldi	r31, 0x00	; 0
 c46:	2e 17       	cp	r18, r30
 c48:	3f 07       	cpc	r19, r31
 c4a:	1c f4       	brge	.+6      	; 0xc52 <dtoa_prf+0x1a0>
 c4c:	12 1b       	sub	r17, r18
 c4e:	21 2f       	mov	r18, r17
 c50:	01 c0       	rjmp	.+2      	; 0xc54 <dtoa_prf+0x1a2>
 c52:	20 e0       	ldi	r18, 0x00	; 0
 c54:	8e 2d       	mov	r24, r14
 c56:	88 71       	andi	r24, 0x18	; 24
 c58:	59 f4       	brne	.+22     	; 0xc70 <dtoa_prf+0x1be>
 c5a:	f6 01       	movw	r30, r12
 c5c:	82 2f       	mov	r24, r18
 c5e:	30 e2       	ldi	r19, 0x20	; 32
 c60:	88 23       	and	r24, r24
 c62:	19 f0       	breq	.+6      	; 0xc6a <dtoa_prf+0x1b8>
 c64:	31 93       	st	Z+, r19
 c66:	81 50       	subi	r24, 0x01	; 1
 c68:	fb cf       	rjmp	.-10     	; 0xc60 <dtoa_prf+0x1ae>
 c6a:	c2 0e       	add	r12, r18
 c6c:	d1 1c       	adc	r13, r1
 c6e:	20 e0       	ldi	r18, 0x00	; 0
 c70:	99 23       	and	r25, r25
 c72:	29 f0       	breq	.+10     	; 0xc7e <dtoa_prf+0x1cc>
 c74:	d6 01       	movw	r26, r12
 c76:	9c 93       	st	X, r25
 c78:	f6 01       	movw	r30, r12
 c7a:	31 96       	adiw	r30, 0x01	; 1
 c7c:	6f 01       	movw	r12, r30
 c7e:	51 11       	cpse	r21, r1
 c80:	0b c0       	rjmp	.+22     	; 0xc98 <dtoa_prf+0x1e6>
 c82:	f6 01       	movw	r30, r12
 c84:	82 2f       	mov	r24, r18
 c86:	90 e3       	ldi	r25, 0x30	; 48
 c88:	88 23       	and	r24, r24
 c8a:	19 f0       	breq	.+6      	; 0xc92 <dtoa_prf+0x1e0>
 c8c:	91 93       	st	Z+, r25
 c8e:	81 50       	subi	r24, 0x01	; 1
 c90:	fb cf       	rjmp	.-10     	; 0xc88 <dtoa_prf+0x1d6>
 c92:	c2 0e       	add	r12, r18
 c94:	d1 1c       	adc	r13, r1
 c96:	20 e0       	ldi	r18, 0x00	; 0
 c98:	0f 2d       	mov	r16, r15
 c9a:	06 0f       	add	r16, r22
 c9c:	9a 81       	ldd	r25, Y+2	; 0x02
 c9e:	34 2f       	mov	r19, r20
 ca0:	30 71       	andi	r19, 0x10	; 16
 ca2:	44 ff       	sbrs	r20, 4
 ca4:	03 c0       	rjmp	.+6      	; 0xcac <dtoa_prf+0x1fa>
 ca6:	91 33       	cpi	r25, 0x31	; 49
 ca8:	09 f4       	brne	.+2      	; 0xcac <dtoa_prf+0x1fa>
 caa:	01 50       	subi	r16, 0x01	; 1
 cac:	10 16       	cp	r1, r16
 cae:	24 f4       	brge	.+8      	; 0xcb8 <dtoa_prf+0x206>
 cb0:	09 30       	cpi	r16, 0x09	; 9
 cb2:	18 f0       	brcs	.+6      	; 0xcba <dtoa_prf+0x208>
 cb4:	08 e0       	ldi	r16, 0x08	; 8
 cb6:	01 c0       	rjmp	.+2      	; 0xcba <dtoa_prf+0x208>
 cb8:	01 e0       	ldi	r16, 0x01	; 1
 cba:	ab 01       	movw	r20, r22
 cbc:	77 ff       	sbrs	r23, 7
 cbe:	02 c0       	rjmp	.+4      	; 0xcc4 <dtoa_prf+0x212>
 cc0:	40 e0       	ldi	r20, 0x00	; 0
 cc2:	50 e0       	ldi	r21, 0x00	; 0
 cc4:	fb 01       	movw	r30, r22
 cc6:	e4 1b       	sub	r30, r20
 cc8:	f5 0b       	sbc	r31, r21
 cca:	a1 e0       	ldi	r26, 0x01	; 1
 ccc:	b0 e0       	ldi	r27, 0x00	; 0
 cce:	ac 0f       	add	r26, r28
 cd0:	bd 1f       	adc	r27, r29
 cd2:	ea 0f       	add	r30, r26
 cd4:	fb 1f       	adc	r31, r27
 cd6:	8e e2       	ldi	r24, 0x2E	; 46
 cd8:	a8 2e       	mov	r10, r24
 cda:	4b 01       	movw	r8, r22
 cdc:	80 1a       	sub	r8, r16
 cde:	91 08       	sbc	r9, r1
 ce0:	0b 2d       	mov	r16, r11
 ce2:	10 e0       	ldi	r17, 0x00	; 0
 ce4:	11 95       	neg	r17
 ce6:	01 95       	neg	r16
 ce8:	11 09       	sbc	r17, r1
 cea:	4f 3f       	cpi	r20, 0xFF	; 255
 cec:	bf ef       	ldi	r27, 0xFF	; 255
 cee:	5b 07       	cpc	r21, r27
 cf0:	21 f4       	brne	.+8      	; 0xcfa <dtoa_prf+0x248>
 cf2:	d6 01       	movw	r26, r12
 cf4:	ac 92       	st	X, r10
 cf6:	11 96       	adiw	r26, 0x01	; 1
 cf8:	6d 01       	movw	r12, r26
 cfa:	64 17       	cp	r22, r20
 cfc:	75 07       	cpc	r23, r21
 cfe:	2c f0       	brlt	.+10     	; 0xd0a <dtoa_prf+0x258>
 d00:	84 16       	cp	r8, r20
 d02:	95 06       	cpc	r9, r21
 d04:	14 f4       	brge	.+4      	; 0xd0a <dtoa_prf+0x258>
 d06:	81 81       	ldd	r24, Z+1	; 0x01
 d08:	01 c0       	rjmp	.+2      	; 0xd0c <dtoa_prf+0x25a>
 d0a:	80 e3       	ldi	r24, 0x30	; 48
 d0c:	41 50       	subi	r20, 0x01	; 1
 d0e:	51 09       	sbc	r21, r1
 d10:	31 96       	adiw	r30, 0x01	; 1
 d12:	d6 01       	movw	r26, r12
 d14:	11 96       	adiw	r26, 0x01	; 1
 d16:	7d 01       	movw	r14, r26
 d18:	40 17       	cp	r20, r16
 d1a:	51 07       	cpc	r21, r17
 d1c:	24 f0       	brlt	.+8      	; 0xd26 <dtoa_prf+0x274>
 d1e:	d6 01       	movw	r26, r12
 d20:	8c 93       	st	X, r24
 d22:	67 01       	movw	r12, r14
 d24:	e2 cf       	rjmp	.-60     	; 0xcea <dtoa_prf+0x238>
 d26:	64 17       	cp	r22, r20
 d28:	75 07       	cpc	r23, r21
 d2a:	39 f4       	brne	.+14     	; 0xd3a <dtoa_prf+0x288>
 d2c:	96 33       	cpi	r25, 0x36	; 54
 d2e:	20 f4       	brcc	.+8      	; 0xd38 <dtoa_prf+0x286>
 d30:	95 33       	cpi	r25, 0x35	; 53
 d32:	19 f4       	brne	.+6      	; 0xd3a <dtoa_prf+0x288>
 d34:	31 11       	cpse	r19, r1
 d36:	01 c0       	rjmp	.+2      	; 0xd3a <dtoa_prf+0x288>
 d38:	81 e3       	ldi	r24, 0x31	; 49
 d3a:	f6 01       	movw	r30, r12
 d3c:	80 83       	st	Z, r24
 d3e:	f7 01       	movw	r30, r14
 d40:	82 2f       	mov	r24, r18
 d42:	90 e2       	ldi	r25, 0x20	; 32
 d44:	88 23       	and	r24, r24
 d46:	19 f0       	breq	.+6      	; 0xd4e <dtoa_prf+0x29c>
 d48:	91 93       	st	Z+, r25
 d4a:	81 50       	subi	r24, 0x01	; 1
 d4c:	fb cf       	rjmp	.-10     	; 0xd44 <dtoa_prf+0x292>
 d4e:	f7 01       	movw	r30, r14
 d50:	e2 0f       	add	r30, r18
 d52:	f1 1d       	adc	r31, r1
 d54:	10 82       	st	Z, r1
 d56:	80 e0       	ldi	r24, 0x00	; 0
 d58:	90 e0       	ldi	r25, 0x00	; 0
 d5a:	29 96       	adiw	r28, 0x09	; 9
 d5c:	ec e0       	ldi	r30, 0x0C	; 12
 d5e:	fa c0       	rjmp	.+500    	; 0xf54 <__epilogue_restores__+0xc>

00000d60 <__ftoa_engine>:
 d60:	28 30       	cpi	r18, 0x08	; 8
 d62:	08 f0       	brcs	.+2      	; 0xd66 <__ftoa_engine+0x6>
 d64:	27 e0       	ldi	r18, 0x07	; 7
 d66:	33 27       	eor	r19, r19
 d68:	da 01       	movw	r26, r20
 d6a:	99 0f       	add	r25, r25
 d6c:	31 1d       	adc	r19, r1
 d6e:	87 fd       	sbrc	r24, 7
 d70:	91 60       	ori	r25, 0x01	; 1
 d72:	00 96       	adiw	r24, 0x00	; 0
 d74:	61 05       	cpc	r22, r1
 d76:	71 05       	cpc	r23, r1
 d78:	39 f4       	brne	.+14     	; 0xd88 <__ftoa_engine+0x28>
 d7a:	32 60       	ori	r19, 0x02	; 2
 d7c:	2e 5f       	subi	r18, 0xFE	; 254
 d7e:	3d 93       	st	X+, r19
 d80:	30 e3       	ldi	r19, 0x30	; 48
 d82:	2a 95       	dec	r18
 d84:	e1 f7       	brne	.-8      	; 0xd7e <__ftoa_engine+0x1e>
 d86:	08 95       	ret
 d88:	9f 3f       	cpi	r25, 0xFF	; 255
 d8a:	30 f0       	brcs	.+12     	; 0xd98 <__ftoa_engine+0x38>
 d8c:	80 38       	cpi	r24, 0x80	; 128
 d8e:	71 05       	cpc	r23, r1
 d90:	61 05       	cpc	r22, r1
 d92:	09 f0       	breq	.+2      	; 0xd96 <__ftoa_engine+0x36>
 d94:	3c 5f       	subi	r19, 0xFC	; 252
 d96:	3c 5f       	subi	r19, 0xFC	; 252
 d98:	3d 93       	st	X+, r19
 d9a:	91 30       	cpi	r25, 0x01	; 1
 d9c:	08 f0       	brcs	.+2      	; 0xda0 <__ftoa_engine+0x40>
 d9e:	80 68       	ori	r24, 0x80	; 128
 da0:	91 1d       	adc	r25, r1
 da2:	df 93       	push	r29
 da4:	cf 93       	push	r28
 da6:	1f 93       	push	r17
 da8:	0f 93       	push	r16
 daa:	ff 92       	push	r15
 dac:	ef 92       	push	r14
 dae:	19 2f       	mov	r17, r25
 db0:	98 7f       	andi	r25, 0xF8	; 248
 db2:	96 95       	lsr	r25
 db4:	e9 2f       	mov	r30, r25
 db6:	96 95       	lsr	r25
 db8:	96 95       	lsr	r25
 dba:	e9 0f       	add	r30, r25
 dbc:	ff 27       	eor	r31, r31
 dbe:	e0 58       	subi	r30, 0x80	; 128
 dc0:	ff 4f       	sbci	r31, 0xFF	; 255
 dc2:	99 27       	eor	r25, r25
 dc4:	33 27       	eor	r19, r19
 dc6:	ee 24       	eor	r14, r14
 dc8:	ff 24       	eor	r15, r15
 dca:	a7 01       	movw	r20, r14
 dcc:	e7 01       	movw	r28, r14
 dce:	05 90       	lpm	r0, Z+
 dd0:	08 94       	sec
 dd2:	07 94       	ror	r0
 dd4:	28 f4       	brcc	.+10     	; 0xde0 <__ftoa_engine+0x80>
 dd6:	36 0f       	add	r19, r22
 dd8:	e7 1e       	adc	r14, r23
 dda:	f8 1e       	adc	r15, r24
 ddc:	49 1f       	adc	r20, r25
 dde:	51 1d       	adc	r21, r1
 de0:	66 0f       	add	r22, r22
 de2:	77 1f       	adc	r23, r23
 de4:	88 1f       	adc	r24, r24
 de6:	99 1f       	adc	r25, r25
 de8:	06 94       	lsr	r0
 dea:	a1 f7       	brne	.-24     	; 0xdd4 <__ftoa_engine+0x74>
 dec:	05 90       	lpm	r0, Z+
 dee:	07 94       	ror	r0
 df0:	28 f4       	brcc	.+10     	; 0xdfc <__ftoa_engine+0x9c>
 df2:	e7 0e       	add	r14, r23
 df4:	f8 1e       	adc	r15, r24
 df6:	49 1f       	adc	r20, r25
 df8:	56 1f       	adc	r21, r22
 dfa:	c1 1d       	adc	r28, r1
 dfc:	77 0f       	add	r23, r23
 dfe:	88 1f       	adc	r24, r24
 e00:	99 1f       	adc	r25, r25
 e02:	66 1f       	adc	r22, r22
 e04:	06 94       	lsr	r0
 e06:	a1 f7       	brne	.-24     	; 0xdf0 <__ftoa_engine+0x90>
 e08:	05 90       	lpm	r0, Z+
 e0a:	07 94       	ror	r0
 e0c:	28 f4       	brcc	.+10     	; 0xe18 <__ftoa_engine+0xb8>
 e0e:	f8 0e       	add	r15, r24
 e10:	49 1f       	adc	r20, r25
 e12:	56 1f       	adc	r21, r22
 e14:	c7 1f       	adc	r28, r23
 e16:	d1 1d       	adc	r29, r1
 e18:	88 0f       	add	r24, r24
 e1a:	99 1f       	adc	r25, r25
 e1c:	66 1f       	adc	r22, r22
 e1e:	77 1f       	adc	r23, r23
 e20:	06 94       	lsr	r0
 e22:	a1 f7       	brne	.-24     	; 0xe0c <__ftoa_engine+0xac>
 e24:	05 90       	lpm	r0, Z+
 e26:	07 94       	ror	r0
 e28:	20 f4       	brcc	.+8      	; 0xe32 <__ftoa_engine+0xd2>
 e2a:	49 0f       	add	r20, r25
 e2c:	56 1f       	adc	r21, r22
 e2e:	c7 1f       	adc	r28, r23
 e30:	d8 1f       	adc	r29, r24
 e32:	99 0f       	add	r25, r25
 e34:	66 1f       	adc	r22, r22
 e36:	77 1f       	adc	r23, r23
 e38:	88 1f       	adc	r24, r24
 e3a:	06 94       	lsr	r0
 e3c:	a9 f7       	brne	.-22     	; 0xe28 <__ftoa_engine+0xc8>
 e3e:	84 91       	lpm	r24, Z
 e40:	10 95       	com	r17
 e42:	17 70       	andi	r17, 0x07	; 7
 e44:	41 f0       	breq	.+16     	; 0xe56 <__ftoa_engine+0xf6>
 e46:	d6 95       	lsr	r29
 e48:	c7 95       	ror	r28
 e4a:	57 95       	ror	r21
 e4c:	47 95       	ror	r20
 e4e:	f7 94       	ror	r15
 e50:	e7 94       	ror	r14
 e52:	1a 95       	dec	r17
 e54:	c1 f7       	brne	.-16     	; 0xe46 <__ftoa_engine+0xe6>
 e56:	e6 e2       	ldi	r30, 0x26	; 38
 e58:	f0 e0       	ldi	r31, 0x00	; 0
 e5a:	68 94       	set
 e5c:	15 90       	lpm	r1, Z+
 e5e:	15 91       	lpm	r17, Z+
 e60:	35 91       	lpm	r19, Z+
 e62:	65 91       	lpm	r22, Z+
 e64:	95 91       	lpm	r25, Z+
 e66:	05 90       	lpm	r0, Z+
 e68:	7f e2       	ldi	r23, 0x2F	; 47
 e6a:	73 95       	inc	r23
 e6c:	e1 18       	sub	r14, r1
 e6e:	f1 0a       	sbc	r15, r17
 e70:	43 0b       	sbc	r20, r19
 e72:	56 0b       	sbc	r21, r22
 e74:	c9 0b       	sbc	r28, r25
 e76:	d0 09       	sbc	r29, r0
 e78:	c0 f7       	brcc	.-16     	; 0xe6a <__ftoa_engine+0x10a>
 e7a:	e1 0c       	add	r14, r1
 e7c:	f1 1e       	adc	r15, r17
 e7e:	43 1f       	adc	r20, r19
 e80:	56 1f       	adc	r21, r22
 e82:	c9 1f       	adc	r28, r25
 e84:	d0 1d       	adc	r29, r0
 e86:	7e f4       	brtc	.+30     	; 0xea6 <__ftoa_engine+0x146>
 e88:	70 33       	cpi	r23, 0x30	; 48
 e8a:	11 f4       	brne	.+4      	; 0xe90 <__ftoa_engine+0x130>
 e8c:	8a 95       	dec	r24
 e8e:	e6 cf       	rjmp	.-52     	; 0xe5c <__ftoa_engine+0xfc>
 e90:	e8 94       	clt
 e92:	01 50       	subi	r16, 0x01	; 1
 e94:	30 f0       	brcs	.+12     	; 0xea2 <__ftoa_engine+0x142>
 e96:	08 0f       	add	r16, r24
 e98:	0a f4       	brpl	.+2      	; 0xe9c <__ftoa_engine+0x13c>
 e9a:	00 27       	eor	r16, r16
 e9c:	02 17       	cp	r16, r18
 e9e:	08 f4       	brcc	.+2      	; 0xea2 <__ftoa_engine+0x142>
 ea0:	20 2f       	mov	r18, r16
 ea2:	23 95       	inc	r18
 ea4:	02 2f       	mov	r16, r18
 ea6:	7a 33       	cpi	r23, 0x3A	; 58
 ea8:	28 f0       	brcs	.+10     	; 0xeb4 <__ftoa_engine+0x154>
 eaa:	79 e3       	ldi	r23, 0x39	; 57
 eac:	7d 93       	st	X+, r23
 eae:	2a 95       	dec	r18
 eb0:	e9 f7       	brne	.-6      	; 0xeac <__ftoa_engine+0x14c>
 eb2:	10 c0       	rjmp	.+32     	; 0xed4 <__ftoa_engine+0x174>
 eb4:	7d 93       	st	X+, r23
 eb6:	2a 95       	dec	r18
 eb8:	89 f6       	brne	.-94     	; 0xe5c <__ftoa_engine+0xfc>
 eba:	06 94       	lsr	r0
 ebc:	97 95       	ror	r25
 ebe:	67 95       	ror	r22
 ec0:	37 95       	ror	r19
 ec2:	17 95       	ror	r17
 ec4:	17 94       	ror	r1
 ec6:	e1 18       	sub	r14, r1
 ec8:	f1 0a       	sbc	r15, r17
 eca:	43 0b       	sbc	r20, r19
 ecc:	56 0b       	sbc	r21, r22
 ece:	c9 0b       	sbc	r28, r25
 ed0:	d0 09       	sbc	r29, r0
 ed2:	98 f0       	brcs	.+38     	; 0xefa <__ftoa_engine+0x19a>
 ed4:	23 95       	inc	r18
 ed6:	7e 91       	ld	r23, -X
 ed8:	73 95       	inc	r23
 eda:	7a 33       	cpi	r23, 0x3A	; 58
 edc:	08 f0       	brcs	.+2      	; 0xee0 <__ftoa_engine+0x180>
 ede:	70 e3       	ldi	r23, 0x30	; 48
 ee0:	7c 93       	st	X, r23
 ee2:	20 13       	cpse	r18, r16
 ee4:	b8 f7       	brcc	.-18     	; 0xed4 <__ftoa_engine+0x174>
 ee6:	7e 91       	ld	r23, -X
 ee8:	70 61       	ori	r23, 0x10	; 16
 eea:	7d 93       	st	X+, r23
 eec:	30 f0       	brcs	.+12     	; 0xefa <__ftoa_engine+0x19a>
 eee:	83 95       	inc	r24
 ef0:	71 e3       	ldi	r23, 0x31	; 49
 ef2:	7d 93       	st	X+, r23
 ef4:	70 e3       	ldi	r23, 0x30	; 48
 ef6:	2a 95       	dec	r18
 ef8:	e1 f7       	brne	.-8      	; 0xef2 <__ftoa_engine+0x192>
 efa:	11 24       	eor	r1, r1
 efc:	ef 90       	pop	r14
 efe:	ff 90       	pop	r15
 f00:	0f 91       	pop	r16
 f02:	1f 91       	pop	r17
 f04:	cf 91       	pop	r28
 f06:	df 91       	pop	r29
 f08:	99 27       	eor	r25, r25
 f0a:	87 fd       	sbrc	r24, 7
 f0c:	90 95       	com	r25
 f0e:	08 95       	ret

00000f10 <__prologue_saves__>:
 f10:	2f 92       	push	r2
 f12:	3f 92       	push	r3
 f14:	4f 92       	push	r4
 f16:	5f 92       	push	r5
 f18:	6f 92       	push	r6
 f1a:	7f 92       	push	r7
 f1c:	8f 92       	push	r8
 f1e:	9f 92       	push	r9
 f20:	af 92       	push	r10
 f22:	bf 92       	push	r11
 f24:	cf 92       	push	r12
 f26:	df 92       	push	r13
 f28:	ef 92       	push	r14
 f2a:	ff 92       	push	r15
 f2c:	0f 93       	push	r16
 f2e:	1f 93       	push	r17
 f30:	cf 93       	push	r28
 f32:	df 93       	push	r29
 f34:	cd b7       	in	r28, 0x3d	; 61
 f36:	de b7       	in	r29, 0x3e	; 62
 f38:	ca 1b       	sub	r28, r26
 f3a:	db 0b       	sbc	r29, r27
 f3c:	0f b6       	in	r0, 0x3f	; 63
 f3e:	f8 94       	cli
 f40:	de bf       	out	0x3e, r29	; 62
 f42:	0f be       	out	0x3f, r0	; 63
 f44:	cd bf       	out	0x3d, r28	; 61
 f46:	09 94       	ijmp

00000f48 <__epilogue_restores__>:
 f48:	2a 88       	ldd	r2, Y+18	; 0x12
 f4a:	39 88       	ldd	r3, Y+17	; 0x11
 f4c:	48 88       	ldd	r4, Y+16	; 0x10
 f4e:	5f 84       	ldd	r5, Y+15	; 0x0f
 f50:	6e 84       	ldd	r6, Y+14	; 0x0e
 f52:	7d 84       	ldd	r7, Y+13	; 0x0d
 f54:	8c 84       	ldd	r8, Y+12	; 0x0c
 f56:	9b 84       	ldd	r9, Y+11	; 0x0b
 f58:	aa 84       	ldd	r10, Y+10	; 0x0a
 f5a:	b9 84       	ldd	r11, Y+9	; 0x09
 f5c:	c8 84       	ldd	r12, Y+8	; 0x08
 f5e:	df 80       	ldd	r13, Y+7	; 0x07
 f60:	ee 80       	ldd	r14, Y+6	; 0x06
 f62:	fd 80       	ldd	r15, Y+5	; 0x05
 f64:	0c 81       	ldd	r16, Y+4	; 0x04
 f66:	1b 81       	ldd	r17, Y+3	; 0x03
 f68:	aa 81       	ldd	r26, Y+2	; 0x02
 f6a:	b9 81       	ldd	r27, Y+1	; 0x01
 f6c:	ce 0f       	add	r28, r30
 f6e:	d1 1d       	adc	r29, r1
 f70:	0f b6       	in	r0, 0x3f	; 63
 f72:	f8 94       	cli
 f74:	de bf       	out	0x3e, r29	; 62
 f76:	0f be       	out	0x3f, r0	; 63
 f78:	cd bf       	out	0x3d, r28	; 61
 f7a:	ed 01       	movw	r28, r26
 f7c:	08 95       	ret

00000f7e <_exit>:
 f7e:	f8 94       	cli

00000f80 <__stop_program>:
 f80:	ff cf       	rjmp	.-2      	; 0xf80 <__stop_program>
